{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.html","./src/app/components/account-record/account-record.component.html","./src/app/components/account-records-input-form/account-records-input-form.component.html","./src/app/components/account-records/account-records.component.html","./src/app/components/account-summary/account-summary.component.html","./src/app/components/accounts-list/accounts-list.component.html","./src/app/components/accounts-manager/accounts-manager.component.html","./src/app/components/banks-list/banks-list.component.html","./src/app/components/currencies-manager/currencies-manager.component.html","./src/app/components/deposits-input-form/deposits-input-form.component.html","./src/app/components/deposits-table/deposits-table.component.html","./src/app/components/dialog-error/dialog-error.component.html","./src/app/components/dialog-yes-no/dialog-yes-no.component.html","./src/app/components/editable-names-list/editable-names-list.component.html","./src/app/components/income-or-expense-category-select/income-or-expense-category-select.component.html","./src/app/components/income-or-expense-items-manager/income-or-expense-items-manager.component.html","./src/app/components/money-transfer-form/money-transfer-form.component.html","./src/app/components/monthly-balance-report/monthly-balance-report.component.html","./src/app/components/monthly-savings-report/monthly-savings-report.component.html","./src/app/components/progress-bar/progress-bar.component.html","./src/app/components/section-accounts/accounts.component.html","./src/app/components/section-dashboard/dashboard.component.html","./src/app/components/section-deposits/deposits.component.html","./src/app/components/section-exchange-rates/section-exchange-rates.component.html","./src/app/components/section-main/main.component.html","./src/app/components/sliding-menu/sliding-menu.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/account-record/account-record.component.css","./src/app/components/account-record/account-record.component.ts","./src/app/components/account-records-input-form/account-records-input-form.component.css","./src/app/components/account-records-input-form/account-records-input-form.component.ts","./src/app/components/account-records/account-records.component.css","./src/app/components/account-records/account-records.component.ts","./src/app/components/account-summary/account-summary.component.css","./src/app/components/account-summary/account-summary.component.ts","./src/app/components/accounts-list/accounts-list.component.css","./src/app/components/accounts-list/accounts-list.component.ts","./src/app/components/accounts-manager/accounts-manager.component.css","./src/app/components/accounts-manager/accounts-manager.component.ts","./src/app/components/banks-list/banks-list.component.css","./src/app/components/banks-list/banks-list.component.ts","./src/app/components/currencies-manager/currencies-manager.component.css","./src/app/components/currencies-manager/currencies-manager.component.ts","./src/app/components/deposits-input-form/deposits-input-form.component.css","./src/app/components/deposits-input-form/deposits-input-form.component.ts","./src/app/components/deposits-table/deposits-table.component.css","./src/app/components/deposits-table/deposits-table.component.ts","./src/app/components/dialog-error/dialog-error.component.css","./src/app/components/dialog-error/dialog-error.component.ts","./src/app/components/dialog-yes-no/dialog-yes-no.component.css","./src/app/components/dialog-yes-no/dialog-yes-no.component.ts","./src/app/components/editable-names-list/editable-names-list.component.css","./src/app/components/editable-names-list/editable-names-list.component.ts","./src/app/components/income-or-expense-category-select/income-or-expense-category-select.component.css","./src/app/components/income-or-expense-category-select/income-or-expense-category-select.component.ts","./src/app/components/income-or-expense-items-manager/income-or-expense-items-manager.component.css","./src/app/components/income-or-expense-items-manager/income-or-expense-items-manager.component.ts","./src/app/components/money-transfer-form/money-transfer-form.component.css","./src/app/components/money-transfer-form/money-transfer-form.component.ts","./src/app/components/monthly-balance-report/monthly-balance-report.component.css","./src/app/components/monthly-balance-report/monthly-balance-report.component.ts","./src/app/components/monthly-savings-report/monthly-savings-report.component.css","./src/app/components/monthly-savings-report/monthly-savings-report.component.ts","./src/app/components/progress-bar/progress-bar.component.css","./src/app/components/progress-bar/progress-bar.component.ts","./src/app/components/section-accounts/accounts.component.css","./src/app/components/section-accounts/accounts.component.ts","./src/app/components/section-dashboard/dashboard.component.css","./src/app/components/section-dashboard/dashboard.component.ts","./src/app/components/section-deposits/deposits.component.css","./src/app/components/section-deposits/deposits.component.ts","./src/app/components/section-exchange-rates/section-exchange-rates.component.css","./src/app/components/section-exchange-rates/section-exchange-rates.component.ts","./src/app/components/section-main/main.component.css","./src/app/components/section-main/main.component.ts","./src/app/components/sliding-menu/sliding-menu.component.css","./src/app/components/sliding-menu/sliding-menu.component.ts","./src/app/model/account-record.ts","./src/app/model/account.ts","./src/app/model/bank.ts","./src/app/model/deposit.ts","./src/app/model/identifiable.ts","./src/app/model/income-or-expense-item-category.ts","./src/app/model/income-or-expense-item.ts","./src/app/model/monthly-balance-report-record.ts","./src/app/model/monthly-report-simple-record.ts","./src/app/model/nameable.ts","./src/app/pipes/iso-date.pipe.ts","./src/app/reusable/dom.ops.ts","./src/app/reusable/formats.ts","./src/app/reusable/navigation.ts","./src/app/reusable/params.builder.ts","./src/app/services/configuration-service/configuration.service.ts","./src/app/services/data-service/data.service.ts","./src/app/services/dialog-service/dialog.service.ts","./src/app/services/http-client-wrapper/http-client-wrapper.service.ts","./src/app/services/navigation-service/navigation.service.ts","./src/app/services/state-service/state.service.ts","./src/assets/skins/dark-times/google-charts-style.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"\\n<div class=\\\"border\\\">\\n    <div class=\\\"section-title\\\">\\n        {{ navigation.currentSection.name }}\\n    </div>\\n\\n    <div class=\\\"paper\\\">\\n        <!-- Sections defined in the NavigationService -->\\n        <app-section-main             *ngIf=\\\"navigation.currentSection.id == navigation.APP_SECTION_MAIN\\\"          ></app-section-main>\\n        <app-section-dashboard        *ngIf=\\\"navigation.currentSection.id == navigation.APP_SECTION_DASHBOARD\\\"     ></app-section-dashboard>\\n        <app-section-accounts         *ngIf=\\\"navigation.currentSection.id == navigation.APP_SECTION_ACCOUNTS\\\"      ></app-section-accounts>\\n        <app-section-deposits         *ngIf=\\\"navigation.currentSection.id == navigation.APP_SECTION_DEPOSITS\\\"      ></app-section-deposits>\\n        <app-section-exchange-rates   *ngIf=\\\"navigation.currentSection.id == navigation.APP_SECTION_EXCHANGE_RATES\\\"></app-section-exchange-rates>\\n    </div>\\n\\n\\n\\n    <!-- ================================================================================================= -->\\n\\n\\n\\n    <app-sliding-menu></app-sliding-menu> <!-- Keep this one at the bottom or set the z-index very high up -->\\n</div>\\n\"","export default \"<!-- Delete button wannabe -->\\n<div\\n    class=\\\"account-record-cell account-record-delete-button\\\"\\n    style=\\\"float:left;\\\"\\n    (click)=\\\"state.deleteAccountRecord(rec)\\\"\\n>\\n\\n</div>\\n\\n<!-- Record date -->\\n<div\\n    class=\\\"account-record-cell account-record-list-record-date\\\"\\n    style=\\\"float:left;\\\"\\n    (click)=\\\"state.selectAccountRecord(rec);\\\"\\n>\\n    {{rec.date | date:\\\"yyyy-MM-dd\\\"}}\\n</div>\\n\\n<!-- Income or Expense item -->\\n<div\\n    class=\\\"account-record-cell account-record-list-record-income-or-expense-item\\\"\\n    style=\\\"float:left;\\\"\\n    (click)=\\\"state.selectAccountRecord(rec);\\\"\\n>\\n    {{getIncomeOrExpenseItemCategoryName(rec.incomeOrExpenseItemId)}} - {{getIncomeOrExpenseItemName(rec.incomeOrExpenseItemId)}}\\n</div>\\n\\n<!-- Record value -->\\n<div\\n    class=\\\"account-record-cell account-record-list-record-value {{rec.value < 0 ? 'account-record-list-record-value-red' : 'account-record-list-record-value-green'}}\\\"\\n    style=\\\"float:left;\\\"\\n    (click)=\\\"state.selectAccountRecord(rec);\\\"\\n>\\n    {{rec.value | currency:'USD':'':'2.2-2' }}\\n</div>\\n\\n\"","export default \"<div class=\\\"account-records-input-form\\\">\\n    <div class=\\\"account-records-input-group account-record-input-group-date\\\">\\n        <label for=\\\"dtPick\\\">Date</label> <br />\\n\\n        <input\\n            type=\\\"text\\\"\\n            class=\\\"app-control-component account-record-input account-record-input-date\\\"\\n            [matDatepicker]=\\\"acctRecDtPick\\\"\\n            readonly=\\\"true\\\"\\n            [(ngModel)]=\\\"selectedAccountRecordDateStr\\\"\\n        >\\n        <mat-datepicker-toggle matSuffix [for]=\\\"acctRecDtPick\\\"></mat-datepicker-toggle>\\n        <mat-datepicker id=\\\"acctRecDtPick\\\" #acctRecDtPick></mat-datepicker>\\n    </div>\\n\\n    <div class=\\\"account-records-input-group account-record-input-group-cat\\\">\\n        <label for=\\\"ioeCat\\\">Input or Expense Category</label> <br />\\n        <select\\n            id=\\\"ioeCat\\\"\\n            *ngIf=\\\"state.incomeOrExpenseItems\\\"\\n            [(ngModel)]=\\\"selectedIncomeOrExpenseItem\\\"\\n            class=\\\"app-control-component app-accounts-list\\\"\\n            style=\\\"width: calc(100% - 80px); float: left;\\\"\\n            (change)=\\\"onItemChange($event)\\\"\\n        >\\n            <option *ngFor=\\\"let item of state.incomeOrExpenseItems\\\"\\n                [ngValue]=\\\"item\\\"\\n                [selected]=\\\"item && selectedIncomeOrExpenseItem && item.id == selectedIncomeOrExpenseItem.id\\\"\\n            >\\n                {{ item ? getCatItemName(item) : 'select one' }}\\n            </option>\\n        </select>\\n\\n        <div\\n          class=\\\"app-control-component app-button input-form-categories-edit-button\\\"\\n          (click)=\\\"showIncomeOrExpenseItemsManager()\\\"\\n        ></div>\\n    </div>\\n\\n    <div class=\\\"account-records-input-group account-record-input-group-value\\\">\\n        <label for=\\\"vaInput\\\">Value</label> <br />\\n        <input  id=\\\"vaInput\\\"\\n                class=\\\"app-control-component account-record-input\\\"\\n                type=\\\"text\\\" [(ngModel)]=\\\"state.selectedAccountRecord.value\\\"\\n                (keyup)=\\\"onValueKeyUp($event)\\\"\\n        >\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"records-list-body acount-records-list\\\">\\n    <div\\n      *ngFor=\\\"let rec of state.selectedAccountRecords\\\"\\n      class=\\\"records-list-record acount-records-list-record {{ (state.selectedAccountRecord && state.selectedAccountRecord.id) == rec.id ? 'records-list-record-selected' : ' ' }}\\\"\\n    >\\n        <app-account-record [rec]=\\\"rec\\\"></app-account-record>\\n    </div>\\n</div>\"","export default \"<table><tr><td></td><td>\\n    <table>\\n        <tr><td>Name     </td><td>&nbsp; </td><td style=\\\"text-align:right;\\\">{{   account.name }}                       </td></tr>\\n        <tr><td>Incoming </td><td>&nbsp; </td><td style=\\\"text-align:right;\\\">{{   summary.runningSumIncoming | currency:'USD':'':'2.2-2'}}  </td></tr>\\n        <tr><td>Outgoing </td><td>&nbsp; </td><td style=\\\"text-align:right;\\\">{{ - summary.runningSumOutgoing | currency:'USD':'':'2.2-2'}}  </td></tr>\\n        <tr><td>Balance  </td><td>&nbsp; </td><td style=\\\"text-align:right;\\\">{{   summary.runningSumIncoming + summary.runningSumOutgoing | currency:'USD':'':'2.2-2'}}  </td></tr>\\n    </table>\\n</td></tr></table>\"","export default \"\\n<select class=\\\"app-control-component app-accounts-list\\\" #t (change)=\\\"selectAccountId(t.value)\\\">\\n    <option *ngFor=\\\"let account of state.accounts\\\"\\n            value=\\\"{{account.id}}\\\"\\n            [selected]=\\\"account.id == state.selectedAccountId\\\"> {{ account.name }}\\n    </option>\\n</select>\\n\"","export default \"<div class=\\\"generic-panel-title app-control-component\\\">Edit Accounts</div>\\n\\n<div>\\n<app-editable-names-list\\n    *ngIf=\\\"state.accounts\\\"\\n    [(listItems)]=\\\"state.accounts\\\"\\n    [(displayValueCallback)]=\\\"getItemName\\\"\\n    [(newItemCallback)]=\\\"newItem\\\"\\n    (onSelect)=\\\"selectItem($event)\\\"\\n    (onAdd)=\\\"addItem($event)\\\"\\n    (onDelete)=\\\"deleteItem($event)\\\"\\n    (onEditBegin)=\\\"beginEditItem($event)\\\"\\n    (onEditEnd)=\\\"endEditItem($event)\\\"\\n></app-editable-names-list>\\n</div>\"","export default \"<div class=\\\"generic-panel-title app-control-component\\\">\\n    Banks list\\n</div>\\n\\n<div>\\n<app-editable-names-list\\n    *ngIf=\\\"state.banks\\\"\\n    [(listItems)]=\\\"state.banks\\\"\\n    [(displayValueCallback)]=\\\"getBankName\\\"\\n    [(newItemCallback)]=\\\"newBank\\\"\\n    (onSelect)=\\\"selectBank($event)\\\"\\n    (onAdd)=\\\"addBank($event)\\\"\\n    (onDelete)=\\\"deleteBank($event)\\\"\\n    (onEditBegin)=\\\"beginEditBank($event)\\\"\\n    (onEditEnd)=\\\"endEditBank($event)\\\"\\n></app-editable-names-list>\\n</div>\"","export default \"<table style=\\\"width:100%\\\">\\n<tr><td>\\n    <div style=\\\"float:top;\\\">\\n        <div class=\\\"editable-names-list-container\\\" style=\\\"float: left\\\">\\n            Supported\\n            <div class=\\\"editable-names-list\\\" style=\\\"overflow-x: hidden; overflow-y: scroll; min-width:60px; width: 60px;\\\">\\n                <div\\n                    *ngFor=\\\"let item of state.supportedCurrencies\\\"\\n                    class=\\\"editable-names-list-element {{ (selectedSupportedCurrency && (selectedSupportedCurrency == item)) ? 'editable-names-list-element-selected' : ' ' }}\\\"\\n                    (click)=\\\"selectSupportedCurrency(item)\\\"\\n                >\\n                    {{ item }}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div style=\\\"width:10px; float: left;\\\">&nbsp; </div>\\n\\n        <div class=\\\"editable-names-list-container\\\" style=\\\"float: left; width: calc(100% - 100px)\\\">\\n            Monitored\\n            <div class=\\\"editable-names-list\\\" style=\\\"overflow-x: hidden; overflow-y: scroll; min-width: 100%;\\\">\\n                <div\\n                    *ngFor=\\\"let item of state.monitoredCurrencies\\\"\\n                    class=\\\"editable-names-list-element {{ (selectedMonitoredCurrency && (selectedMonitoredCurrency.id == item.id)) ? 'editable-names-list-element-selected' : ' ' }}\\\"\\n                    (click)=\\\"selectMonitoredCurrency(item)\\\"\\n                >\\n                    <table><tr>\\n                        <td style=\\\"width: 50px;\\\">{{ item.currencyTypeName }}</td>\\n                        <td style=\\\"width: 70px;\\\">{{ item.lastCollectedDate | date:\\\"yyyy-MM-dd\\\" }}</td>\\n                        <td style=\\\"width: 60px;\\\">{{ item.lastCollectedValue | currency:'USD':'':'1.4-4' }}</td>\\n                </tr></table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</td></tr><tr><td>\\n\\n    <div class=\\\"editable-names-list-control-panel\\\" style=\\\"float:bottom;\\\">\\n        <div\\n            *ngIf=\\\"selectedSupportedCurrency\\\"\\n            class=\\\"editable-names-list-button editable-names-list-button-add\\\"\\n            (click)=\\\"addButtonClicked()\\\"\\n        >\\n            Add\\n        </div>\\n        <div\\n            *ngIf=\\\"selectedMonitoredCurrency\\\"\\n            class=\\\"editable-names-list-button editable-names-list-button-del\\\"\\n            (click)=\\\"deleteButtonClicked()\\\"\\n        >\\n            Del\\n        </div>\\n        <div\\n            *ngIf=\\\"!loading && state.monitoredCurrencies && state.monitoredCurrencies.length > 0\\\"\\n            class=\\\"editable-names-list-button editable-names-list-button-collect\\\"\\n            (click)=\\\"collectButtonClicked()\\\"\\n        >\\n            Collect\\n        </div>\\n        <div *ngIf=\\\"loading\\\">... loading ...</div>\\n    </div>\\n\\n</td></tr>\\n</table>\"","export default \"<!-- Source account -->\\r\\n<div style=\\\"float: left\\\">\\r\\n    Source account <br />\\r\\n    <select\\r\\n        [(ngModel)]=\\\"sourceAccount\\\"\\r\\n        class=\\\"app-control-component app-accounts-list\\\"\\r\\n        style=\\\"width: 100%;\\\"\\r\\n    >\\r\\n        <option *ngFor=\\\"let item of state.accounts\\\"\\r\\n            [ngValue]=\\\"item\\\"\\r\\n            [selected]=\\\"item && sourceAccount.id == item.id\\\"\\r\\n        >\\r\\n            {{ item ? item.name : 'select one' }}\\r\\n        </option>\\r\\n    </select>\\r\\n</div>\\r\\n\\r\\n<!-- Bank -->\\r\\n<div style=\\\"float: left\\\">\\r\\n    Bank <br />\\r\\n    <select\\r\\n        [(ngModel)]=\\\"bank\\\"\\r\\n        class=\\\"app-control-component app-accounts-list\\\"\\r\\n        style=\\\"width: 100%;\\\"\\r\\n    >\\r\\n        <option *ngFor=\\\"let item of state.banks\\\"\\r\\n            [ngValue]=\\\"item\\\"\\r\\n            [selected]=\\\"item && bank.id == item.id\\\"\\r\\n        >\\r\\n            {{ item ? item.name : 'select one' }}\\r\\n        </option>\\r\\n    </select>\\r\\n</div>\\r\\n\\r\\n<!-- Account number -->\\r\\n<div style=\\\"float: left\\\">\\r\\n    Account number <br />\\r\\n    <input\\r\\n        class=\\\"app-control-component\\\"\\r\\n        style=\\\"width: 100%;\\\"\\r\\n        type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"accountNumber\\\"\\r\\n        (keyup)=\\\"onAccountNumberFieldUp($event)\\\"\\r\\n    >\\r\\n</div>\\r\\n\\r\\n<div style=\\\"float: left\\\">\\r\\n    &nbsp; &nbsp; &nbsp; \\r\\n</div>\\r\\n\\r\\n<!-- Start date -->\\r\\n<div style=\\\"float: left\\\">\\r\\n    Start date <br />\\r\\n    <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"app-control-component account-record-input account-record-input-date\\\"\\r\\n            style=\\\"width: 100%;\\\"\\r\\n            [matDatepicker]=\\\"startDatePicker\\\"\\r\\n            readonly=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"startDateStr\\\"\\r\\n    >\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker id=\\\"startDatePicker\\\" #startDatePicker></mat-datepicker>\\r\\n</div>\\r\\n\\r\\n<!-- End date -->\\r\\n<div style=\\\"float: left\\\">\\r\\n    End date <br />\\r\\n    <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"app-control-component account-record-input account-record-input-date\\\"\\r\\n            style=\\\"width: 100%;\\\"\\r\\n            [matDatepicker]=\\\"endDatePicker\\\"\\r\\n            readonly=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"endDateStr\\\"\\r\\n    >\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker id=\\\"endDatePicker\\\" #endDatePicker></mat-datepicker>\\r\\n</div>\\r\\n\\r\\n<!-- Value -->\\r\\n<div style=\\\"float: left\\\">\\r\\n    Value <br />\\r\\n    <input\\r\\n        class=\\\"app-control-component\\\"\\r\\n        style=\\\"width: 50px;\\\"\\r\\n        type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"value\\\"\\r\\n        (keyup)=\\\"onTextFieldUp($event)\\\"\\r\\n    >\\r\\n</div>\\r\\n\\r\\n<!-- Interest % -->\\r\\n<div style=\\\"float: left\\\">\\r\\n    Interest % <br />\\r\\n    <input\\r\\n        class=\\\"app-control-component\\\"\\r\\n        style=\\\"width: 40px;\\\"\\r\\n        type=\\\"text\\\"\\r\\n        [(ngModel)]=\\\"interestPercent\\\"\\r\\n        (keyup)=\\\"onTextFieldUp($event)\\\"\\r\\n    >\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"records-list-header\\\">\\n    <div class=\\\"records-list-heder-cell dposits-source-account-column\\\">Source account</div>\\n    <div class=\\\"records-list-heder-cell deposits-bank-column\\\">Bank</div>\\n    <div class=\\\"records-list-heder-cell deposits-account-number-column\\\">Account number</div>\\n    <div class=\\\"records-list-heder-cell deposits-start-date-column\\\">Start date</div>\\n    <div class=\\\"records-list-heder-cell deposits-end-date-column\\\">End date</div>\\n    <div class=\\\"records-list-heder-cell deposits-value-column\\\">Value</div>\\n    <div class=\\\"records-list-heder-cell deposits-interest-percent-column\\\">Interest %</div>\\n    <div class=\\\"records-list-heder-cell deposits-interest-value-column\\\">Interest</div>\\n    <div class=\\\"records-list-heder-cell deposits-progress-column\\\">Progress</div>\\n</div>\\n<div\\n    class=\\\"records-list-body acount-records-list\\\"\\n    *ngIf=\\\"state.accounts && state.banks && state.deposits && state.deposits != []\\\"\\n>\\n    <div\\n      *ngFor=\\\"let rec of state.deposits\\\"\\n      class=\\\"records-list-record {{ (state.selectedDeposit && state.selectedDeposit.id == rec.id) ? 'records-list-record-selected' : ' ' }}\\\"\\n      (click)=\\\"state.selectDeposit(rec)\\\"\\n    >\\n        <div class=\\\"records-list-body-cell dposits-source-account-column\\\">{{ getSourceAccountName(rec) }}</div>\\n        <div class=\\\"records-list-body-cell deposits-bank-column\\\">{{ getBankName(rec) }}</div>\\n        <div class=\\\"records-list-body-cell deposits-account-number-column\\\">{{ rec.accountNumber }}</div>\\n        <div class=\\\"records-list-body-cell deposits-start-date-column\\\">{{ rec.startDate | date:\\\"yyyy-MM-dd\\\" }}</div>\\n        <div class=\\\"records-list-body-cell deposits-end-date-column\\\">{{ rec.endDate | date:\\\"yyyy-MM-dd\\\" }}</div>\\n        <div class=\\\"records-list-body-cell deposits-value-column\\\">{{ rec.value | currency:'USD':'':'2.2-2' }}</div>\\n        <div class=\\\"records-list-body-cell deposits-interest-percent-column\\\">{{ rec.interestPercent | currency:'USD':'':'2.2-2' }}%</div>\\n        <div class=\\\"records-list-body-cell deposits-interest-value-column\\\">{{ (rec.value * rec.interestPercent / 100) | currency:'USD':'':'2.2-2' }}</div>\\n\\n        <div class=\\\"records-list-body-cell deposits-progress-column\\\">\\n            <app-progress-bar [valueFromZeroToOneHundred]=\\\"computeProgress(rec)\\\"></app-progress-bar>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"dialog-background\\\" style=\\\"width:100%\\\">\\n    <p>{{ dialogService.dialogMessage }}</p>\\n\\n    <div class=\\\"app-control-component app-button dialogue-button\\\" (click)=\\\"dialogService.closeErrDialog()\\\">Close</div>\\n</div>\\n\"","export default \"<div class=\\\"dialog-background\\\" style=\\\"width:100%\\\">\\n    <p>{{ dialogService.dialogMessage }}</p>\\n\\n    <br />\\n\\n    <table style=\\\"width: 100%\\\"><tr><td style=\\\"width: 50%; text-align: center;\\\">\\n        <div class=\\\"app-control-component app-button dialogue-button\\\" (click)=\\\"dialogService.closeYesNoDialog(true)\\\">Yes</div>\\n    </td><td style=\\\"width: 50%; text-align: center;\\\">\\n        <div class=\\\"app-control-component app-button dialogue-button\\\" (click)=\\\"dialogService.closeYesNoDialog(false)\\\">No</div>\\n    </td></tr></table>\\n</div>\\n\"","export default \"\\n<div class=\\\"editable-names-list-container\\\">\\n    <div class=\\\"editable-names-list\\\" style=\\\"overflow-x: hidden; overflow-y: scroll;\\\">\\n        <div\\n            *ngFor=\\\"let item of listItems\\\"\\n            class=\\\"editable-names-list-element {{ (selectedItem && (selectedItem == item)) ? 'editable-names-list-element-selected' : ' ' }}\\\"\\n            (click)=\\\"selectItem(item)\\\"\\n        >\\n            {{ displayValueCallback(item) }}\\n        </div>\\n    </div>\\n    <div class=\\\"editable-names-list-control-panel\\\">\\n        <div\\n            *ngIf=\\\"!selectedItemDisplatValue\\\"\\n            class=\\\"editable-names-list-button editable-names-list-button-add\\\"\\n            (click)=\\\"addButtonClicked()\\\"\\n        >\\n            Add\\n        </div>\\n        <div\\n            *ngIf=\\\"selectedItem && !selectedItemDisplatValue\\\"\\n            class=\\\"editable-names-list-button editable-names-list-button-edit\\\"\\n            (click)=\\\"editButtonClicked()\\\"\\n        >\\n            Edt\\n        </div>\\n        <div\\n            *ngIf=\\\"selectedItem && !selectedItemDisplatValue\\\"\\n            class=\\\"editable-names-list-button editable-names-list-button-del\\\"\\n            (click)=\\\"deleteButtonClicked()\\\"\\n        >\\n            Del\\n        </div>\\n\\n        <input\\n            *ngIf=\\\"selectedItemDisplatValue\\\"\\n            class=\\\"app-control-component editable-names-list-name-input\\\"\\n            type=\\\"text\\\" [(ngModel)]=\\\"selectedItemDisplatValue\\\"\\n            (keyup)=\\\"onEditInputKeyUp($event)\\\"\\n        >\\n    </div>\\n</div>\"","export default \"\\n<select *ngIf=\\\"state.incomeOrExpenseItems\\\"\\n        [(ngModel)]=\\\"selectedIncomeOrExpenseItemObj\\\"\\n        class=\\\"app-control-component app-accounts-list {{cssClassName}}\\\"\\n        (change)=\\\"onChange()\\\"\\n>\\n    <option *ngFor=\\\"let item of state.incomeOrExpenseItems\\\"\\n            [ngValue]=\\\"item\\\"\\n            [selected]=\\\"item && selectedIncomeOrExpenseItemObj.id == item.id\\\"\\n    >\\n        {{ item ? getCatItemName(item) : 'select one' }}\\n    </option>\\n</select>\\n\"","export default \"<!-- Income or expense item categories selector -->\\n<select\\n    *ngIf=\\\"state.incomeOrExpenseItemCategories && !allowEditCategories\\\"\\n    [(ngModel)]=\\\"state.selectedIncomeOrExpenseItemCategory\\\"\\n    class=\\\"app-control-component app-accounts-list\\\"\\n    style=\\\"width: 100%\\\"\\n    (change)=\\\"loadIncomeOrExpenseItemsForCategory()\\\"\\n>\\n    <option *ngFor=\\\"let item of state.incomeOrExpenseItemCategories\\\"\\n        [ngValue]=\\\"item\\\"\\n        [selected]=\\\"item && state.selectedIncomeOrExpenseItemCategory && item.id == state.selectedIncomeOrExpenseItemCategory.id\\\"\\n    >\\n        {{ item ? item.name : 'select one' }}\\n    </option>\\n</select>\\n\\n\\n<app-editable-names-list\\n    *ngIf=\\\"state.incomeOrExpenseItemCategories && allowEditCategories\\\"\\n    [(listItems)]=\\\"state.incomeOrExpenseItemCategories\\\"\\n    [(displayValueCallback)]=\\\"getItemName\\\"\\n    [(newItemCallback)]=\\\"newCategory\\\"\\n    (onSelect)=\\\"selectCategory($event)\\\"\\n    (onAdd)=\\\"addCategory($event)\\\"\\n    (onDelete)=\\\"deleteCategory($event)\\\"\\n    (onEditBegin)=\\\"beginEditCategory($event)\\\"\\n    (onEditEnd)=\\\"endEditCategory($event)\\\"\\n    style=\\\"float: left; width: 200px;\\\"\\n></app-editable-names-list>\\n\\n<app-editable-names-list\\n    *ngIf=\\\"state.selectedIncomeOrExpenseItemCategory && incomeOrExpenseItems\\\"\\n    [(listItems)]=\\\"incomeOrExpenseItems\\\"\\n    [(displayValueCallback)]=\\\"getItemName\\\"\\n    [(newItemCallback)]=\\\"newItem\\\"\\n    (onSelect)=\\\"selectItem($event)\\\"\\n    (onAdd)=\\\"addItem($event)\\\"\\n    (onDelete)=\\\"deleteItem($event)\\\"\\n    (onEditBegin)=\\\"beginEditItem($event)\\\"\\n    (onEditEnd)=\\\"endEditItem($event)\\\"\\n></app-editable-names-list>\"","export default \"<div class=\\\"generic-panel\\\" style=\\\"width: calc(100% - 10px); height:calc(100% - 10px);\\\">\\n    \\n    <table>\\n        <tr>\\n            <td>\\n                From account\\n            </td>\\n            <td style=\\\"width: 10px;\\\"></td>\\n            <td>\\n                <select\\n                    [(ngModel)]=\\\"fromAccount\\\"\\n                    class=\\\"app-control-component app-accounts-list\\\"\\n                    style=\\\"width: 100px;\\\"\\n                >\\n                    <option *ngFor=\\\"let item of state.accounts\\\"\\n                        [ngValue]=\\\"item\\\"\\n                        [selected]=\\\"fromAccount && item.id == fromAccount.id\\\"\\n                    >\\n                        {{ item ? item.name : 'select one' }}\\n                    </option>\\n                </select>\\n            </td>\\n        </tr><tr>\\n            <td>\\n                To account\\n            </td>\\n            <td></td>\\n            <td>\\n                <select\\n                    [(ngModel)]=\\\"toAccount\\\"\\n                    class=\\\"app-control-component app-accounts-list\\\"\\n                    style=\\\"width: 100px;\\\"\\n                >\\n                    <option *ngFor=\\\"let item of state.accounts\\\"\\n                        [ngValue]=\\\"item\\\"\\n                        [selected]=\\\"toAccount && item.id == toAccount.id\\\"\\n                    >\\n                        {{ item ? item.name : 'select one' }}\\n                    </option>\\n                </select>\\n            </td>\\n        </tr><tr>\\n            <td>\\n                Amount\\n            </td>\\n            <td></td>\\n            <td>\\n                <input\\n                    class=\\\"app-control-component account-record-input\\\"\\n                    type=\\\"text\\\" [(ngModel)]=\\\"amount\\\"\\n                >\\n            </td>\\n        </tr><tr>\\n            <td></td><td></td>\\n            <td>\\n                <div\\n                    class=\\\"app-control-component app-button app-button-new-account\\\"\\n                    style=\\\"width: 150px;\\\"\\n                    (click)= \\\"startMoneyTransfer()\\\"\\n                >\\n                    Transfer\\n                </div>\\n            </td>\\n        </tr>\\n    </table>\\n</div>\\n\\n\\n\\n\"","export default \"<google-chart #chart\\n    [type]=\\\"'ComboChart'\\\"\\n    [data]=\\\"chartData\\\"\\n    [columnNames]=\\\"chartColumnNames\\\"\\n    [options]=\\\"chartOptions\\\"\\n></google-chart>\\n\"","export default \"<google-chart #chart\\n    [type]=\\\"chartType\\\"\\n    [data]=\\\"chartData\\\"\\n    [columnNames]=\\\"chartColumnNames\\\"\\n    [options]=\\\"chartOptions\\\"\\n></google-chart>\\n\"","export default \"<div class=\\\"progress-bar-sheet\\\">\\n    <div class=\\\"progress-bar-border\\\" style=\\\"float: left\\\">\\n        <div class=\\\"progress-bar-full\\\" style=\\\"float: left;\\\" [style.width.%]=\\\"valueFromZeroToOneHundred\\\"></div>\\n    </div>\\n    <div class=\\\"progress-bar-value\\\">\\n        {{ valueFromZeroToOneHundred  | currency:'USD':'':'2.2-2' }}%\\n    </div>\\n</div>\\n\\n\"","export default \"\\n<!-- ACCOUNT SELECTION BOX -->\\n<div class=\\\"accounts-top-bar\\\">\\n    <div style=\\\"float: left\\\">Account &nbsp;</div>\\n    <app-accounts-list style=\\\"float:left\\\"></app-accounts-list>\\n\\n    <div\\n        class=\\\"app-control-component app-button input-form-categories-edit-button\\\"\\n        (click)=\\\"showAccountsManager()\\\"\\n    ></div>\\n</div>\\n\\n\\n\\n<!-- ACCOUNT SUMMARY -->\\n<div class=\\\"generic-panel account-summary-panel\\\" style=\\\"float: left; \\\">\\n    <span class=\\\"generic-panel-title\\\">Account summary:</span><br />\\n    <app-account-summary\\n        *ngIf=\\\"state.selectedAccountSummary != null && state.selectedAccount != null\\\"\\n        [summary]=\\\"state.selectedAccountSummary\\\"\\n        [account]=\\\"state.selectedAccount\\\"\\n    ></app-account-summary>\\n\\n    <br /><br />\\n\\n    <b>Monthly balance report</b>\\n    <app-monthly-balance-report\\n        [width]=\\\"280\\\"\\n        [height]=\\\"120\\\"\\n        [hideDates]=\\\"true\\\"\\n        [sourceDate]=\\\"state.monthlyBalanceReport\\\"\\n    ></app-monthly-balance-report>\\n\\n    <br /><br />\\n\\n    <b>Monthly delta report</b>\\n    <app-monthly-savings-report\\n        [chartType]=\\\"'ColumnChart'\\\"\\n        [width]=\\\"280\\\"\\n        [height]=\\\"120\\\"\\n        [hideDates]=\\\"true\\\"\\n        [sourceDate]=\\\"state.monthlyBalanceReport\\\"\\n        [sourceDataXValueMapper]=\\\"sourceXValueMapper\\\"\\n        [sourceDataYValueMapper]=\\\"sourceYValueMapper\\\"\\n        [forceMin]=\\\"0\\\"\\n        [chartColumnNames]=\\\"['Month', 'Delta']\\\"\\n    ></app-monthly-savings-report>\\n</div>\\n\\n\\n\\n<!-- SPACER -->\\n<div id=\\\"account-panels-spacer\\\" style=\\\"float: left;\\\">&nbsp;</div>\\n\\n\\n\\n<!-- ACCOUNT DETAILS AND INPUT FORM -->\\n<div class=\\\"generic-panel account-records-panel\\\" style=\\\"float: left; \\\">\\n    <!-- RECORDS LIST -->\\n    <span class=\\\"generic-panel-title\\\">Account records:</span><br />\\n    <app-account-records *ngIf=\\\"state.selectedAccountRecords != null && state.incomeOrExpenseItems != null\\\"></app-account-records>\\n\\n    <!-- SPACER -->\\n    <div class=\\\"account-records-separator\\\"></div>\\n\\n    <!-- INPUT FORM -->\\n    <app-account-records-input-form *ngIf=\\\"state.selectedAccountRecord\\\"></app-account-records-input-form>\\n\\n    <!-- NEW RECORD BUTTON -->\\n    <div\\n        class=\\\"app-control-component app-button app-button-new-account\\\"\\n        style=\\\"float: left\\\"\\n        *ngIf=\\\" !(state.selectedAccountRecord)\\\"\\n        (click)= \\\"state.newAccountRecord()\\\"\\n    >\\n        New record\\n    </div>\\n\\n    <!-- TRANSFER BUTTON -->\\n    <div\\n        class=\\\"app-control-component app-button app-button-new-account\\\"\\n        style=\\\"float: left\\\"\\n        *ngIf=\\\" !(state.selectedAccountRecord)\\\"\\n        (click)= \\\"showMoneyTransferForm()\\\"\\n    >\\n        Transfer\\n    </div>\\n</div>\\n\\n\"","export default \"<!-- Status panel -->\\n<div class=\\\"generic-panel\\\" style=\\\"width:calc(50% - 15px); height:calc(100% - 10px); float:left;\\\">\\n    <div style=\\\"float: left\\\">\\n        <span class=\\\"generic-panel-title\\\">Deposits Value</span>\\n\\n        <table *ngIf=\\\"state.monitoredCurrencies && state.totalDepositsValue\\\">\\n            <tr *ngFor=\\\"let cr of state.monitoredCurrencies\\\">\\n                <td>Deposits value in {{ cr.currencyTypeName }}</td>\\n                <td> : </td>\\n                <td style=\\\"text-align: right\\\">\\n                    {{ state.totalDepositsValue / cr.lastCollectedValue | currency:'USD':'':'2.2-2' }}\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n\\n    <div style=\\\"width: 50px; float: left;\\\">&nbsp;</div>\\n\\n    <div style=\\\"float: left\\\">\\n        <span class=\\\"generic-panel-title\\\">Account Balance</span>\\n\\n        <table *ngIf=\\\"state.accountSummariesLoaded\\\">\\n            <tr *ngFor=\\\"let acc of state.accounts\\\">\\n                <td>{{ acc.name }}</td>\\n                <td> : </td>\\n                <td style=\\\"text-align: right\\\">\\n                    {{ getAccountValue(acc.id) | currency:'USD':'':'2.2-2' }}\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n\\n    <div style=\\\"float: left; width:100%; height:25px;\\\">&nbsp;</div>\\n\\n    <div *ngIf=\\\"state.monitoredCurrencies && state.monthlyDepositsBalanceReport\\\">\\n        <div\\n            style=\\\"float: left;\\\"\\n            *ngFor=\\\"let cr of state.monitoredCurrencies\\\"\\n        >\\n            <b>Historical deposits value in {{cr.currencyTypeName}}</b>\\n            <app-monthly-savings-report\\n                [chartType]=\\\"'ColumnChart'\\\"\\n                [width]=\\\"290\\\"\\n                [height]=\\\"120\\\"\\n                [hideDates]=\\\"true\\\"\\n                [sourceDate]=\\\"state.monthlyDepositsBalanceReport\\\"\\n                [sourceDataXValueMapper]=\\\"sourceXValueMapper\\\"\\n                [sourceDataYValueMapper]=\\\"sourceYValueMappers[cr.currencyTypeName.valueOf()]\\\"\\n                [forceMin]=\\\"-5\\\"\\n                [chartColumnNames]=\\\"['Month', 'Value in ' + cr.currencyTypeName]\\\"\\n            ></app-monthly-savings-report>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Spacer -->\\n<div style=\\\"width: 10px; float: left;\\\">&nbsp;</div>\\n\\n<!-- Breakdown panel -->\\n<div class=\\\"generic-panel\\\" style=\\\"width:calc(50% - 15px); height:calc(100% - 10px); float:left;\\\">\\n    <div *ngIf=\\\"state.incomeOrExpenseItems && state.incomeOrExpenseItemCategories && state.monthlyExpensesReports && state.accounts\\\">\\n        <span class=\\\"generic-panel-title\\\">Breakdown of Expenses</span>\\n\\n        <br /><br />\\n\\n        <div class=\\\"dashboard-expenses-report-controls\\\" style=\\\"width: 100%; height: 50px;  padding-top: 4px;\\\">\\n\\n            <div style=\\\"width: 15px; float: left;\\\">&nbsp;</div>\\n\\n            <!-- Account Select -->\\n            <div style=\\\"float: left;\\\">\\n                Account <br />\\n                <select\\n                    [(ngModel)]=\\\"selectedAccount\\\"\\n                    class=\\\"app-control-component app-accounts-list\\\"\\n                    style=\\\"width: 100px;\\\"\\n                    (change)=\\\"onAccountChanged()\\\"\\n                >\\n                    <option [ngValue]=\\\"null\\\" [selected]=\\\"!selectedAccount\\\">\\n                        All\\n                    </option>\\n                    <option *ngFor=\\\"let item of state.accounts\\\"\\n                        [ngValue]=\\\"item\\\"\\n                        [selected]=\\\"seletedAccount && item.id == seletedAccount.id\\\"\\n                    >\\n                        {{ item ? item.name : 'select one' }}\\n                    </option>\\n                </select>\\n            </div>\\n\\n            <div style=\\\"width: 15px; float: left;\\\">&nbsp;</div>\\n\\n            <!-- Category Select -->\\n            <div style=\\\"float: left;\\\">\\n                Category <br />\\n                <select\\n                    [(ngModel)]=\\\"selectedCategory\\\"\\n                    class=\\\"app-control-component app-accounts-list\\\"\\n                    style=\\\"width: 100px;\\\"\\n                    (change)=\\\"onCategoryChanged()\\\"\\n                >\\n                    <option [ngValue]=\\\"null\\\" [selected]=\\\"!selectedCategory\\\">\\n                        All\\n                    </option>\\n                    <option *ngFor=\\\"let item of state.incomeOrExpenseItemCategories\\\"\\n                        [ngValue]=\\\"item\\\"\\n                        [selected]=\\\"selectedCategory && item.id == selectedCategory.id\\\"\\n                    >\\n                        {{ item ? item.name : 'select one' }}\\n                    </option>\\n                </select>\\n            </div>\\n\\n            <div style=\\\"width: 15px; float: left;\\\">&nbsp;</div>\\n\\n            <!-- Item Select -->\\n            <div style=\\\"float: left;\\\">\\n                Item <br />\\n                <select\\n                    [(ngModel)]=\\\"selectedItem\\\"\\n                    class=\\\"app-control-component app-accounts-list\\\"\\n                    style=\\\"width: 100px;\\\"\\n                    (change)=\\\"onItemChanged()\\\"\\n                >\\n                    <option [ngValue]=\\\"null\\\" [selected]=\\\"!selectedItem\\\">\\n                        All\\n                    </option>\\n                    <option *ngFor=\\\"let item of getValidIncomeOrExpenseItems()\\\"\\n                        [ngValue]=\\\"item\\\"\\n                        [selected]=\\\"selectedItem && item.id == selectedItem.id\\\"\\n                    >\\n                        {{ item ? item.name : 'select one' }}\\n                    </option>\\n                </select>\\n            </div>\\n        </div>\\n\\n        <br /><br />\\n\\n        <!-- Breakdown Report Chart -->\\n        <div class=\\\"dashboard-expenses-report-chart\\\" style=\\\"width: 100%; height: 400px; padding-top: 10px; padding-bottom: 10px;\\\">\\n            <app-monthly-savings-report\\n                *ngIf=\\\"monthlyExpensesReportChartData\\\"\\n                [chartType]=\\\"'ColumnChart'\\\"\\n                [width]=\\\"600\\\"\\n                [height]=\\\"200\\\"\\n                [hideDates]=\\\"false\\\"\\n                [sourceDate]=\\\"monthlyExpensesReportChartData\\\"\\n                [sourceDataXValueMapper]=\\\"monthlyExpensesReportChartXValueMapper\\\"\\n                [sourceDataYValueMapper]=\\\"monthlyExpensesReportChartYValueMapper\\\"\\n                [forceMin]=\\\"-5\\\"\\n                [chartColumnNames]=\\\"['Month', 'Total Expenses']\\\"\\n            ></app-monthly-savings-report>\\n        </div>\\n    </div>\\n</div>\"","export default \"<!-- ACCOUNT SUMMARY -->\\n<div class=\\\"generic-panel deposits-summary-panel\\\" style=\\\"float: left; \\\">\\n    <span class=\\\"generic-panel-title\\\">Deposits summary:</span><br />\\n    <table style=\\\"width: 280px;\\\" *ngIf=\\\"state.deposits\\\">\\n        <tr><td>Number of active Deposits</td><td style=\\\"text-align: right;\\\">{{ state.deposits.length }}</td></tr>\\n        <tr><td>Total deposited sum      </td><td style=\\\"text-align: right;\\\">{{ getTotalDepositsValue()    | currency:'USD':'':'2.2-2' }}</td></tr>\\n        <tr><td>Total expected interest  </td><td style=\\\"text-align: right;\\\">{{ getTotalDepositsInterest() | currency:'USD':'':'2.2-2' }}</td></tr>\\n    </table>\\n    <br /><br />\\n\\n\\n    <span class=\\\"generic-panel-title\\\">First deposit to reach maturity:</span><br />\\n    <table style=\\\"width: 280px;\\\" *ngIf=\\\"state.firstDepositToReachMaturity\\\">\\n        <tr><td>Bank account number &nbsp; &nbsp; </td><td style=\\\"text-align: right;\\\">{{ state.firstDepositToReachMaturity.accountNumber }}</td></tr>\\n        <tr><td>Maturity date                     </td><td style=\\\"text-align: right;\\\">{{ state.firstDepositToReachMaturity.endDate | date:\\\"yyyy-MM-dd\\\" }}</td></tr>\\n        <tr><td>Deposited value                   </td><td style=\\\"text-align: right;\\\">{{ state.firstDepositToReachMaturity.value | currency:'USD':'':'2.2-2' }}</td></tr>\\n        <tr><td>Interest rate                     </td><td style=\\\"text-align: right;\\\">{{ state.firstDepositToReachMaturity.interestPercent | currency:'USD':'':'2.2-2' }}</td></tr>\\n        <tr><td>Interest value                    </td><td style=\\\"text-align: right;\\\">{{ ((state.firstDepositToReachMaturity.value * state.firstDepositToReachMaturity.interestPercent) / 100) | currency:'USD':'':'2.2-2' }}</td></tr>\\n    </table>\\n\\n    <br /><br />\\n\\n    <b>Monthly balance report</b>\\n    <app-monthly-balance-report\\n        [width]=\\\"280\\\"\\n        [height]=\\\"120\\\"\\n        [hideDates]=\\\"true\\\"\\n        [sourceDate]=\\\"state.monthlyDepositsBalanceReport\\\"\\n    ></app-monthly-balance-report>\\n</div>\\n\\n\\n\\n<!-- SPACER -->\\n<div id=\\\"account-panels-spacer\\\" style=\\\"float: left;\\\">&nbsp;</div>\\n\\n\\n\\n<!-- ACCOUNT DETAILS AND INPUT FORM -->\\n<div class=\\\"generic-panel deposit-records-panel\\\" style=\\\"float: left; \\\">\\n    <!-- DEPOSIS LIST -->\\n    <span class=\\\"generic-panel-title\\\">Deposits</span><br />\\n    <app-deposits-table></app-deposits-table>\\n\\n    <!-- SPACER -->\\n    <div class=\\\"account-records-separator\\\"></div>\\n\\n    <!-- INPUT FORM -->\\n    <app-deposits-input-form *ngIf=\\\"state.selectedDeposit\\\"></app-deposits-input-form>\\n\\n    <!-- NEW DEPOSIT BUTTON -->\\n    <div\\n        class=\\\"app-control-component app-button app-button-new-account\\\"\\n        *ngIf=\\\" !(state.selectedDeposit)\\\"\\n        (click)= \\\"state.newDeposit()\\\"\\n    >\\n        New deposit\\n    </div>\\n</div>\\n\\n\"","export default \"<div *ngIf=\\\"state.allExchangeRatesHistoryLoaded\\\">\\n\\n<div\\n    *ngFor=\\\"let crName of getCurrencies()\\\"\\n    style=\\\"float: left; padding-right: 15px; padding-bottom: 15px;\\\"\\n>\\n    <div *ngIf=\\\"crName\\\">\\n        <app-monthly-savings-report\\n            [chartType]=\\\"'LineChart'\\\"\\n            [width]=\\\"570\\\"\\n            [height]=\\\"220\\\"\\n            [hideDates]=\\\"true\\\"\\n            [sourceDate]=\\\"getChartData(crName)\\\"\\n            [sourceDataXValueMapper]=\\\"sourceXValueMapper\\\"\\n            [sourceDataYValueMapper]=\\\"sourceYValueMapper\\\"\\n            [chartColumnNames]=\\\"['Date', crName + ' Exchange Rate']\\\"\\n        ></app-monthly-savings-report>\\n    </div>\\n\\n</div>\\n\\n</div>\"","export default \"\\n<!-- Income or Expense Items and Categories lists -->\\n<div class=\\\"generic-panel income-or-expense-items-editor-full\\\">\\n    <div class=\\\"generic-panel-title\\\">Income or Expense Items Editor</div>\\n    <app-income-or-expense-items-manager [allowEditCategories]=\\\"true\\\">\\n    </app-income-or-expense-items-manager>\\n</div>\\n\\n<div style=\\\"height: 5px;\\\"></div>\\n\\n<table class=\\\"income-or-expense-items-editor-full\\\"><tr>\\n    <td>\\n        <!-- Banks list -->\\n        <div class=\\\"generic-panel income-or-expense-items-editor-full\\\" style=\\\"height: 280px;\\\">\\n            <div class=\\\"generic-panel-title\\\">Banks Editor</div>\\n            <app-banks-list></app-banks-list>\\n        </div>\\n    </td>\\n    <td style=\\\"width: 5px\\\"></td>\\n    <td>\\n        <!-- Accounts list -->\\n        <div class=\\\"generic-panel income-or-expense-items-editor-full\\\" style=\\\"height: 280px;\\\">\\n            <div class=\\\"generic-panel-title\\\">Accounts Editor</div>\\n            <app-accounts-manager></app-accounts-manager>\\n        </div>\\n    </td>\\n    <td style=\\\"width: 5px\\\"></td>\\n    <td>\\n        <div class=\\\"generic-panel income-or-expense-items-editor-full\\\" style=\\\"height: 280px;\\\">\\n            <div class=\\\"generic-panel-title\\\">Monitored Currencies</div>\\n            <app-currencies-manager></app-currencies-manager>\\n        </div>\\n    </td>\\n</tr></table>\\n\\n\"","export default \"<div  id=\\\"sliding-menu\\\"\\n      style=\\\"position: absolute; height: 100px; right: 60px; top: -70px; border-style: none;\\\"\\n      class=\\\"sliding-menu-hidden\\\"\\n\\n      [@pullMenu]=currentState\\n      (mouseover)=\\\"onMouseOver()\\\"\\n      (mouseout)=\\\"onMouseOut()\\\"\\n>\\n    <div style=\\\"width: 100%; height: 60px;\\\" class=\\\"sliding-menu-icons-container\\\">\\n        <table><tr><td>\\n            <div class=\\\"sliding-menu-nav-icon nav-back-icon\\\" style=\\\"width:54px; height:54px; \\\" (click)=\\\"navigation.navigateBack()\\\"></div>\\n\\n            <div *ngFor=\\\"let navSection of navigation.getSections()\\\"\\n                  class=\\\"sliding-menu-nav-icon {{navSection.iconCssClass}}\\\"\\n                  style=\\\"width:54px; height:54px; \\\"\\n                  (click)=\\\"navigation.navigateToSectionId(navSection.id)\\\"\\n            ></div>\\n        </td></tr></table>\\n    </div>\\n\\n    <div style=\\\"width: 90px; height: 30px;\\\" class=\\\"sliding-menu-pulldown-button\\\"></div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Navigation } from './reusable/navigation';\nimport { DomOps } from './reusable/dom.ops';\nimport { NavigationService } from './services/navigation-service/navigation.service';\nimport { environment } from 'src/environments/environment';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    title = 'acct-gui';\n\n    constructor(public navigation : NavigationService) {\n        DomOps.getTagByTypeAndName(\"link\", \"customSkin\")\n                          .setAttribute(\"href\", 'assets/skins/' + environment.skin + '/main.css');\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AccountsListComponent } from './components/accounts-list/accounts-list.component';\nimport { MainSectionComponent } from './components/section-main/main.component';\nimport { DashboardSectionComponent } from './components/section-dashboard/dashboard.component';\nimport { AccountsSectionComponent } from './components/section-accounts/accounts.component';\nimport { DepositsSectionComponent } from './components/section-deposits/deposits.component';\nimport { SlidingMenuComponent } from './components/sliding-menu/sliding-menu.component';\n\n// https://stackoverflow.com/questions/38892771/cant-bind-to-ngmodel-since-it-isnt-a-known-property-of-input\nimport { FormsModule } from '@angular/forms';\n\n// https://material.angular.io/components/datepicker/api\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatNativeDateModule, MAT_DATE_FORMATS, DateAdapter, MAT_DATE_LOCALE} from '@angular/material';\nimport {MatInputModule} from '@angular/material';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n// https://stackoverflow.com/questions/53359598/how-to-change-angular-material-datepicker-format\nimport { MY_FORMATS } from './reusable/formats';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\n\n// Google charts - https://www.tutorialspoint.com/angular_googlecharts/angular_googlecharts_quick_guide.htm\nimport { GoogleChartsModule } from 'angular-google-charts';\n\nimport { IncomeOrExpenseCategorySelectComponent } from './components/income-or-expense-category-select/income-or-expense-category-select.component';\nimport { AccountRecordComponent } from './components/account-record/account-record.component';\nimport { AccountSummaryComponent } from './components/account-summary/account-summary.component';\nimport { AccountRecordsComponent } from './components/account-records/account-records.component';\nimport { AccountRecordsInputFormComponent } from './components/account-records-input-form/account-records-input-form.component';\nimport { DialogErrorComponent } from './components/dialog-error/dialog-error.component';\nimport { DialogYesNoComponent } from './components/dialog-yes-no/dialog-yes-no.component';\nimport { IncomeOrExpenseItemsManagerComponent } from './components/income-or-expense-items-manager/income-or-expense-items-manager.component';\nimport { EditableNamesListComponent } from './components/editable-names-list/editable-names-list.component';\nimport { AccountsManagerComponent } from './components/accounts-manager/accounts-manager.component';\nimport { BanksListComponent } from './components/banks-list/banks-list.component';\nimport { DepositsTableComponent } from './components/deposits-table/deposits-table.component';\nimport { DepositsInputFormComponent } from './components/deposits-input-form/deposits-input-form.component';\nimport { IsoDatePipe } from './pipes/iso-date.pipe';\nimport { ProgressBarComponent } from './components/progress-bar/progress-bar.component'; // don't forget [npm i @angular/material-moment-adapter] and [npm i moment]\nimport { MonthlyBalanceReportComponent } from './components/monthly-balance-report/monthly-balance-report.component';\nimport { MonthlySavingsReportComponent } from './components/monthly-savings-report/monthly-savings-report.component';\nimport { CurrenciesManagerComponent } from './components/currencies-manager/currencies-manager.component';\nimport { SectionExchangeRatesComponent } from './components/section-exchange-rates/section-exchange-rates.component';\nimport { MoneyTransferFormComponent } from './components/money-transfer-form/money-transfer-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountsListComponent,\n    MainSectionComponent,\n    DashboardSectionComponent,\n    AccountsSectionComponent,\n    DepositsSectionComponent,\n    SlidingMenuComponent,\n    IncomeOrExpenseCategorySelectComponent,\n    AccountRecordComponent,\n    AccountSummaryComponent,\n    AccountRecordsComponent,\n    AccountRecordsInputFormComponent,\n    DialogErrorComponent,\n    DialogYesNoComponent,\n    IncomeOrExpenseItemsManagerComponent,\n    EditableNamesListComponent,\n    AccountsManagerComponent,\n    BanksListComponent,\n    DepositsTableComponent,\n    DepositsInputFormComponent,\n    IsoDatePipe,\n    ProgressBarComponent,\n    MonthlyBalanceReportComponent,\n    MonthlySavingsReportComponent,\n    CurrenciesManagerComponent,\n    SectionExchangeRatesComponent,\n    MoneyTransferFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatDialogModule,\n    GoogleChartsModule\n  ],\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS}\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogErrorComponent, DialogYesNoComponent, IncomeOrExpenseItemsManagerComponent, AccountsManagerComponent, MoneyTransferFormComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1yZWNvcmQvYWNjb3VudC1yZWNvcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { IncomeOrExpenseItem } from 'src/app/model/income-or-expense-item';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { AccountRecord } from 'src/app/model/account-record';\n\n@Component({\n  selector: 'app-account-record',\n  templateUrl: './account-record.component.html',\n  styleUrls: ['./account-record.component.css']\n})\nexport class AccountRecordComponent implements OnInit {\n\n    @Input() rec : AccountRecord;\n\n    constructor(private state : StateService) {\n\n    }\n\n    ngOnInit() {\n        this.state.loadIncomeOrExpenseItemCategories();\n    }\n\n    private getIncomeOrExpenseItemName(itemId : Number) {\n        let ret : IncomeOrExpenseItem = itemId ? this.state.getIncomeOrExpenseItem(itemId) : null;\n\n        if (ret == null || ret == undefined) {\n            return \"ERROR: Income or expense item not found\";\n        };\n\n        return ret.name;\n    }\n\n    private getIncomeOrExpenseItemCategoryName(itemId : Number) {\n        if (itemId && this.state.incomeOrExpenseItems[itemId.valueOf()]) {\n            let catId : Number = this.state.getIncomeOrExpenseItem(itemId).incomeOrExpenseItemCategoryId;\n\n            if (this.state.incomeOrExpenseItemCategories) {\n                for(var c = 0 ; c < this.state.incomeOrExpenseItemCategories.length ; c++) {\n                    if (this.state.incomeOrExpenseItemCategories[c].id == catId) {\n                        return this.state.incomeOrExpenseItemCategories[c].name;\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1yZWNvcmRzLWlucHV0LWZvcm0vYWNjb3VudC1yZWNvcmRzLWlucHV0LWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { IncomeOrExpenseItem } from 'src/app/model/income-or-expense-item';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { AccountRecord } from 'src/app/model/account-record';\nimport { IncomeOrExpenseItemsManagerComponent } from '../income-or-expense-items-manager/income-or-expense-items-manager.component';\nimport { MatDialogRef, MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-account-records-input-form',\n  templateUrl: './account-records-input-form.component.html',\n  styleUrls: ['./account-records-input-form.component.css']\n})\nexport class AccountRecordsInputFormComponent implements OnInit {\n    public selectedIncomeOrExpenseItem : IncomeOrExpenseItem;\n    public selectedAccountRecordDateStr : string;\n\n    private itemsManagerDialogRef : MatDialogRef<IncomeOrExpenseItemsManagerComponent>;\n\n    constructor(private state : StateService, private dialog: MatDialog) { }\n\n    ngOnInit() {\n        // https://stackoverflow.com/questions/37587732/how-to-call-another-components-function-in-angular2\n        this.state.selectedRecordChangedObservable.subscribe(rec => {\n            this.selectedAccountRecordToEditFormVariables(this.state.selectedAccountRecord);\n        })\n    }\n\n    public selectedAccountRecordToEditFormVariables(rec : AccountRecord) {\n        this.selectedIncomeOrExpenseItem = this.state.getIncomeOrExpenseItem(rec.incomeOrExpenseItemId);\n        this.selectedAccountRecordDateStr = new Date(this.state.selectedAccountRecord.date.toString()).toISOString().split(\"T\")[0];\n    }\n\n    private editFormVariablesToSelectedAccountRecord() {\n        console.log(this.selectedIncomeOrExpenseItem);\n        this.state.selectedAccountRecord.incomeOrExpenseItemId = this.selectedIncomeOrExpenseItem.id;\n        this.state.selectedAccountRecord.date = new Date(this.selectedAccountRecordDateStr);\n        this.selectedAccountRecordDateStr = null;\n    }\n\n    public onValueKeyUp(event) {\n        if (event.key == \"Enter\") {\n            this.editFormVariablesToSelectedAccountRecord();\n            this.state.saveSelectedAccountRecord();\n        }\n    }\n\n    public onItemChange(event) {\n        this.state.selectedAccountRecord.value = this.selectedIncomeOrExpenseItem.lastUsedValue;\n\n        if (!(this.state.selectedAccountRecord.value)) {\n            this.state.selectedAccountRecord.value = 0;\n        }\n    }\n\n    public showIncomeOrExpenseItemsManager() {\n        this.itemsManagerDialogRef = this.dialog.open(IncomeOrExpenseItemsManagerComponent, {\n            width: '400px',\n            height: '300px'\n          });\n    }\n\n    public getCatItemName(item : IncomeOrExpenseItem) : string {\n        return this.getImpactOrExpenseItemCategoryName(item.incomeOrExpenseItemCategoryId) + \" - \" + item.name;\n    }\n\n    private getImpactOrExpenseItemCategoryName(catId : Number) : string {\n        for (let cat of this.state.incomeOrExpenseItemCategories) {\n            if (cat.id == catId) {\n                return cat.name.valueOf();\n            }\n        }\n\n        return \"???\";\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1yZWNvcmRzL2FjY291bnQtcmVjb3Jkcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { AccountRecord } from 'src/app/model/account-record';\n\n@Component({\n  selector: 'app-account-records',\n  templateUrl: './account-records.component.html',\n  styleUrls: ['./account-records.component.css']\n})\nexport class AccountRecordsComponent implements OnInit {\n\n    constructor(private state : StateService) { }\n\n    ngOnInit() {\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC1zdW1tYXJ5L2FjY291bnQtc3VtbWFyeS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AccountSummary } from 'src/app/model/account-summary';\nimport { Account } from 'src/app/model/account';\n\n@Component({\n  selector: 'app-account-summary',\n  templateUrl: './account-summary.component.html',\n  styleUrls: ['./account-summary.component.css']\n})\nexport class AccountSummaryComponent implements OnInit {\n\n    @Input() summary : AccountSummary;\n    @Input() account : Account;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudHMtbGlzdC9hY2NvdW50cy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { StateService } from 'src/app/services/state-service/state.service';\n\n@Component({\n  selector: 'app-accounts-list',\n  templateUrl: './accounts-list.component.html',\n  styleUrls: ['./accounts-list.component.css']\n})\nexport class AccountsListComponent implements OnInit {\n    constructor(private state : StateService) { }\n\n    ngOnInit() {\n    }\n\n    public selectAccountId(accountId : number) {\n        this.state.selectAccountId(accountId);\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudHMtbWFuYWdlci9hY2NvdW50cy1tYW5hZ2VyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { Account } from '../../model/account';\nimport { StateService } from 'src/app/services/state-service/state.service';\n\n@Component({\n  selector: 'app-accounts-manager',\n  templateUrl: './accounts-manager.component.html',\n  styleUrls: ['./accounts-manager.component.css']\n})\nexport class AccountsManagerComponent implements OnInit {\n\n    private selectedAccount : Account;\n\n    constructor(private state : StateService) { }\n\n    ngOnInit() {\n        this.state.loadAccounts();\n    }\n\n    private getItemName : Function = (item => { return item.name; })\n\n    private newItem : Function = (() => {\n        let acc = new Account(0, \"New account\");\n        return acc;\n    })\n\n    private selectItem(account : Account) {\n        this.selectedAccount = account;\n    }\n\n    private addItem(account : Account) {\n        this.selectedAccount = account;\n    }\n\n    private deleteItem(account : Account) {\n\n    }\n\n    private beginEditItem(account : Account) {\n        this.selectedAccount = account;\n    }\n\n    private endEditItem(name : string) {\n        this.selectedAccount.name = name;\n        this.state.saveAccount(this.selectedAccount);\n        this.selectedAccount = null;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmFua3MtbGlzdC9iYW5rcy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Bank } from 'src/app/model/bank';\nimport { StateService } from 'src/app/services/state-service/state.service';\n\n@Component({\n  selector: 'app-banks-list',\n  templateUrl: './banks-list.component.html',\n  styleUrls: ['./banks-list.component.css']\n})\nexport class BanksListComponent implements OnInit {\n\n    constructor(private state : StateService) { }\n\n    private getBankName : Function = (bank => { return bank.name; });\n\n    private newBank : Function = ( () => { return new Bank(0, \"New bank\"); } );\n\n    private selectedBank : Bank;\n\n    ngOnInit() {\n        this.state.loadBanks();\n    }\n\n    public selectBank(bank : Bank) {\n        this.selectedBank = bank;\n    }\n\n    public addBank(bank : Bank) {\n        this.selectedBank = bank;\n    }\n\n    public deleteBank(bank : Bank) {\n\n    }\n\n    public beginEditBank(bank : Bank) {\n        this.selectedBank = bank;\n    }\n\n    public endEditBank(bankName : string) {\n        this.selectedBank.name = bankName;\n        this.state.saveBank(this.selectedBank);\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VycmVuY2llcy1tYW5hZ2VyL2N1cnJlbmNpZXMtbWFuYWdlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { MonitoredCurrency } from 'src/app/model/monitored-currency';\n\n@Component({\n  selector: 'app-currencies-manager',\n  templateUrl: './currencies-manager.component.html',\n  styleUrls: ['./currencies-manager.component.css']\n})\nexport class CurrenciesManagerComponent implements OnInit {\n\n    private selectedSupportedCurrency : String;\n\n    private selectedMonitoredCurrency : MonitoredCurrency;\n\n    private loading : boolean = false;\n\n    constructor( private state : StateService ) { }\n\n    ngOnInit() {\n        this.state.loadMonitoredCurrency();\n    }\n\n    private selectSupportedCurrency(item : String) {\n        this.selectedSupportedCurrency = item;\n    }\n\n    private selectMonitoredCurrency(item : MonitoredCurrency) {\n        this.selectedMonitoredCurrency = item;\n    }\n\n    private addButtonClicked() {\n        this.state.monitorCurrency(this.selectedSupportedCurrency);\n        this.selectedSupportedCurrency = null;\n    }\n\n    private deleteButtonClicked() {\n        this.state.unMonitorCurrency(this.selectedMonitoredCurrency);\n        this.selectedMonitoredCurrency = null;\n    }\n\n    private collectButtonClicked() {\n        if (!(this.loading)) {\n            this.loading = true;\n\n            this.state.updateCurrenciesFromSource().subscribe(\n                result => {\n                    this.loading = false;\n                }\n            );\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGVwb3NpdHMtaW5wdXQtZm9ybS9kZXBvc2l0cy1pbnB1dC1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { Account } from 'src/app/model/account';\nimport { Bank } from 'src/app/model/bank';\n\n@Component({\n  selector: 'app-deposits-input-form',\n  templateUrl: './deposits-input-form.component.html',\n  styleUrls: ['./deposits-input-form.component.css']\n})\nexport class DepositsInputFormComponent implements OnInit {\n\n    private sourceAccount : Account = new Account(0, \"Not selected\");\n    private bank : Bank = new Bank(0, \"Not selected\");\n    private accountNumber : String;\n    private startDateStr : string;\n    private endDateStr : string;\n    private value : Number;\n    private interestPercent : Number;\n\n    constructor(private state: StateService) { }\n\n    ngOnInit() {\n        this.state.loadAccounts();\n        this.state.loadBanks();\n\n        this.state.selectedDepositChangedObservable.subscribe(\n            deposit => {\n                this.selectedDepositToLocalFields();\n            }\n        );\n    }\n\n    private onTextFieldUp(event) {\n        if (event.key == \"Enter\") {\n            this.localFieldsToSelectedDeposit();\n            this.state.saveSelectedDeposit();\n        }\n    }\n\n    private onAccountNumberFieldUp(event) {\n        if (event.key == \"Enter\") {\n            this.state.selectedDeposit.accountNumber = this.accountNumber;\n            this.state.saveSelectedDeposit(true);\n        }\n    }\n\n    private selectedDepositToLocalFields() {\n        this.sourceAccount = this.state.getAccount(this.state.selectedDeposit.sourceAccountId);\n        this.bank = this.state.getBank(this.state.selectedDeposit.bankId);\n        this.accountNumber = this.state.selectedDeposit.accountNumber;\n        this.startDateStr = new Date(this.state.selectedDeposit.startDate).toISOString().split(\"T\")[0];\n        this.endDateStr = new Date(this.state.selectedDeposit.endDate).toISOString().split(\"T\")[0];\n        this.value = this.state.selectedDeposit.value;\n        this.interestPercent = this.state.selectedDeposit.interestPercent;\n    }\n\n    private localFieldsToSelectedDeposit() {\n        this.state.selectedDeposit.sourceAccountId = this.sourceAccount.id;\n        this.state.selectedDeposit.accountNumber = this.accountNumber;\n        this.state.selectedDeposit.bankId = this.bank.id;\n        this.state.selectedDeposit.startDate = new Date(this.startDateStr);\n        this.state.selectedDeposit.endDate = new Date(this.endDateStr);\n        this.state.selectedDeposit.value = this.value;\n        this.state.selectedDeposit.interestPercent = this.interestPercent;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGVwb3NpdHMtdGFibGUvZGVwb3NpdHMtdGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { Deposit } from 'src/app/model/deposit';\nimport { Bank } from 'src/app/model/bank';\nimport { Account } from 'src/app/model/account';\n\n@Component({\n  selector: 'app-deposits-table',\n  templateUrl: './deposits-table.component.html',\n  styleUrls: ['./deposits-table.component.css']\n})\nexport class DepositsTableComponent implements OnInit {\n\n    constructor(private state : StateService) { }\n\n    ngOnInit() {\n        this.state.loadBanks();\n        this.state.loadAccounts();\n    }\n\n    private getSourceAccountName(deposit : Deposit) : String {\n        let acc : Account = this.state.getAccount(deposit.sourceAccountId);\n        return acc ? acc.name : \"No source account\";\n    }\n\n    private getBankName(deposit : Deposit) : String{ \n        let bnk : Bank = this.state.getBank(deposit.bankId);\n        return bnk ? bnk.name : \"No bank\";\n    }\n\n    private computeProgress(rec : Deposit) : number {\n        let startToEnd   : number = (new Date(rec.endDate)).getTime() - (new Date(rec.startDate)).getTime();\n        let startToToday : number = (new Date(           )).getTime() - (new Date(rec.startDate)).getTime();\n\n        return Math.round(startToToday / startToEnd * 100);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlhbG9nLWVycm9yL2RpYWxvZy1lcnJvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DialogService } from 'src/app/services/dialog-service/dialog.service';\n\n@Component({\n  selector: 'app-dialog-error',\n  templateUrl: './dialog-error.component.html',\n  styleUrls: ['./dialog-error.component.css']\n})\nexport class DialogErrorComponent implements OnInit {\n\n  constructor(private dialogService : DialogService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlhbG9nLXllcy1uby9kaWFsb2cteWVzLW5vLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DialogService } from 'src/app/services/dialog-service/dialog.service';\n\n@Component({\n  selector: 'app-dialog-yes-no',\n  templateUrl: './dialog-yes-no.component.html',\n  styleUrls: ['./dialog-yes-no.component.css']\n})\nexport class DialogYesNoComponent implements OnInit {\n\n  constructor(private dialogService : DialogService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdGFibGUtbmFtZXMtbGlzdC9lZGl0YWJsZS1uYW1lcy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-editable-names-list',\n  templateUrl: './editable-names-list.component.html',\n  styleUrls: ['./editable-names-list.component.css']\n})\nexport class EditableNamesListComponent implements OnInit, OnChanges {\n    @Input() listItems : any[];\n\n    @Input() displayValueCallback : Function;\n\n    @Input() newItemCallback : Function;\n\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAdd: EventEmitter<any> = new EventEmitter();\n\n    @Output() onDelete: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditBegin: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditEnd: EventEmitter<any> = new EventEmitter();\n\n    private selectedItem;\n\n    private selectedItemDisplatValue : string;\n\n    constructor(state : StateService) { }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.selectedItem = null;\n        this.selectedItemDisplatValue = null;\n    }\n\n    private selectItem(item : any) {\n        this.selectedItem = item;\n        this.onSelect.emit(item);\n    }\n\n    private addButtonClicked() {\n        this.selectedItem = this.newItemCallback();\n        this.listItems.push(this.selectedItem);\n        this.selectedItemDisplatValue = this.displayValueCallback(this.selectedItem);\n        this.onAdd.emit(this.selectedItem);\n    }\n\n    private editButtonClicked() {\n        this.selectedItemDisplatValue = this.displayValueCallback(this.selectedItem);\n        this.onEditBegin.emit(this.selectedItem);\n    }\n\n    private deleteButtonClicked() {\n        this.onDelete.emit(this.selectedItem);\n    }\n\n    private onEditInputKeyUp(event) {\n        if (event.key == \"Enter\") {\n            this.onEditEnd.emit(this.selectedItemDisplatValue);\n            this.selectedItemDisplatValue = null;\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jb21lLW9yLWV4cGVuc2UtY2F0ZWdvcnktc2VsZWN0L2luY29tZS1vci1leHBlbnNlLWNhdGVnb3J5LXNlbGVjdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { IncomeOrExpenseItem } from 'src/app/model/income-or-expense-item';\n\n@Component({\n  selector: 'app-income-or-expense-category-select',\n  templateUrl: './income-or-expense-category-select.component.html',\n  styleUrls: ['./income-or-expense-category-select.component.css']\n})\nexport class IncomeOrExpenseCategorySelectComponent implements OnInit {\n    @Input() cssClassName : string;\n\n    /* Two way binding of selectedIncomeOrExpenseItemObj START */\n    public selectedIncomeOrExpenseItemObj : IncomeOrExpenseItem;\n\n    @Input()\n    get selectedIncomeOrExpenseItem() : IncomeOrExpenseItem {\n        return this.selectedIncomeOrExpenseItemObj;\n    };\n\n    @Output() selectedIncomeOrExpenseItemChange : EventEmitter<IncomeOrExpenseItem> = new EventEmitter();\n\n    set selectedIncomeOrExpenseItem(val) {\n        this.selectedIncomeOrExpenseItemObj = val;\n    }\n\n    onChange() {\n      this.selectedIncomeOrExpenseItemChange.emit(this.selectedIncomeOrExpenseItemObj);\n  }\n    /* Two way binding of selectedIncomeOrExpenseItemObj END */\n\n    \n\n\n    constructor(private state : StateService) { }\n\n    ngOnInit() {\n        this.state.loadIncomeOrExpenseItems();\n    }\n\n    private getCatItemName(item : IncomeOrExpenseItem) : string {\n        return this.getImpactOrExpenseItemCategoryName(item.incomeOrExpenseItemCategoryId) + \" - \" + item.name;\n    }\n\n    private getImpactOrExpenseItemCategoryName(catId : Number) : string {\n        for (let cat of this.state.incomeOrExpenseItemCategories) {\n            if (cat.id == catId) {\n                return cat.name.valueOf();\n            }\n        }\n\n        return \"???\";\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jb21lLW9yLWV4cGVuc2UtaXRlbXMtbWFuYWdlci9pbmNvbWUtb3ItZXhwZW5zZS1pdGVtcy1tYW5hZ2VyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { IncomeOrExpenseItemCategory } from 'src/app/model/income-or-expense-item-category';\nimport { IncomeOrExpenseItem } from 'src/app/model/income-or-expense-item';\n\n@Component({\n  selector: 'app-income-or-expense-items-manager',\n  templateUrl: './income-or-expense-items-manager.component.html',\n  styleUrls: ['./income-or-expense-items-manager.component.css']\n})\nexport class IncomeOrExpenseItemsManagerComponent implements OnInit {\n\n    @Input() private allowEditCategories : boolean;\n\n    constructor(private state : StateService) { }\n\n    private incomeOrExpenseItems : IncomeOrExpenseItem[];\n\n    private getItemName : Function = (item => {return item.name; } );\n\n    private newItem : Function = ( () => { \n        let ret : IncomeOrExpenseItem = new IncomeOrExpenseItem(0, \"New Income or Expense Item\"); \n        ret.incomeOrExpenseItemCategoryId = this.state.selectedIncomeOrExpenseItemCategory.id;\n        return ret;\n    });\n\n    private newCategory : Function = ( () => {\n        return new IncomeOrExpenseItemCategory(0, \"New Category\");\n    });\n\n    private selectedItem : IncomeOrExpenseItem;\n\n    ngOnInit() {\n        this.state.loadIncomeOrExpenseItemCategories();\n        this.state.loadIncomeOrExpenseItems();\n    }\n\n    \n    private selectItem(item : IncomeOrExpenseItem) {\n        this.selectedItem = item;\n    }\n\n    private addItem(item: IncomeOrExpenseItem) {\n        this.selectedItem = item;\n    }\n\n    private deleteItem(item: IncomeOrExpenseItem) {\n        \n    }\n\n    private beginEditItem(item: IncomeOrExpenseItem) {\n        this.selectedItem = item;\n    }\n\n    private endEditItem(itemName: string) {\n        this.selectedItem.name = itemName;\n        this.state.saveIncomeOrExpenseItem(this.selectedItem).subscribe(\n            item => {\n                this.selectedItem.id = item.id;\n            }\n        );\n    }\n\n    private selectCategory(category : IncomeOrExpenseItemCategory) {\n        this.state.selectedIncomeOrExpenseItemCategory = category;\n        this.loadIncomeOrExpenseItemsForCategory();\n    }\n\n    private addCategory(category: IncomeOrExpenseItemCategory) {\n        this.state.selectedIncomeOrExpenseItemCategory = category;\n    }\n\n    private deleteCategory(category: IncomeOrExpenseItem) {\n        \n    }\n\n    private beginEditCategory(category: IncomeOrExpenseItem) {\n        this.state.selectedIncomeOrExpenseItemCategory = category;\n    }\n\n    private endEditCategory(categoryName: string) {\n        this.state.selectedIncomeOrExpenseItemCategory.name = categoryName;\n        this.state.saveIncomeOrExpenseItemCategory(\n                this.state.selectedIncomeOrExpenseItemCategory\n            ).subscribe(\n                ret => {\n                    this.state.selectedIncomeOrExpenseItemCategory.id = ret.id;\n                }\n            );\n    }\n\n    private loadIncomeOrExpenseItemsForCategory() {\n        this.incomeOrExpenseItems = [];\n\n        if (this.state.incomeOrExpenseItems) {\n            for(let itm of this.state.incomeOrExpenseItems) {\n                if (itm.incomeOrExpenseItemCategoryId == this.state.selectedIncomeOrExpenseItemCategory.id) {\n                    this.incomeOrExpenseItems.push(itm);\n                }\n            }\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW9uZXktdHJhbnNmZXItZm9ybS9tb25leS10cmFuc2Zlci1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { Account } from 'src/app/model/account';\nimport { DialogService } from 'src/app/services/dialog-service/dialog.service';\n\n@Component({\n  selector: 'app-money-transfer-form',\n  templateUrl: './money-transfer-form.component.html',\n  styleUrls: ['./money-transfer-form.component.css']\n})\nexport class MoneyTransferFormComponent implements OnInit {\n\n    private fromAccount : Account;\n    private toAccount : Account;\n    private amount : Number;\n\n    constructor( private state : StateService, private dialogService : DialogService ) { }\n\n    ngOnInit() {\n    }\n\n    private startMoneyTransfer() {\n        this.state.moneyTransfer(this.fromAccount.id, this.toAccount.id, this.amount);\n        this.dialogService.moneyTransferDialogServiceRef.close();\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW9udGhseS1iYWxhbmNlLXJlcG9ydC9tb250aGx5LWJhbGFuY2UtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { GoogleChartsStyle } from 'src/assets/skins/dark-times/google-charts-style';\nimport { MonthlyBalanceReportRecord } from 'src/app/model/monthly-balance-report-record';\n\n@Component({\n  selector: 'app-monthly-balance-report',\n  templateUrl: './monthly-balance-report.component.html',\n  styleUrls: ['./monthly-balance-report.component.css']\n})\nexport class MonthlyBalanceReportComponent implements OnInit, OnChanges {\n\n    @Input() sourceDate : MonthlyBalanceReportRecord[];\n\n    @Input() width : number;\n    @Input() height : number;\n    @Input() hideDates : boolean;\n\n    private chartData = [];\n    private chartColumnNames = ['Month', 'Incoming', 'Outgoing','Balance'];\n    private chartOptions = {};\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n    ngOnChanges() {\n        this.initChartOptions();\n\n        if (this.sourceDate) {\n            this.chartData = [];\n\n            let min : number = 0;\n            let max : number = 0;\n\n            for (let rec of this.sourceDate) {\n                this.chartData.push([\n                    rec.recordYearMonth.toString(),\n                    rec.incomingBalance,\n                    rec.outgoingBalance,\n                    rec.remainingBalance\n                ]);\n\n                min = rec.incomingBalance < min ? rec.incomingBalance : min;\n                min = rec.outgoingBalance < min ? rec.outgoingBalance : min;\n                min = rec.remainingBalance < min ? rec.remainingBalance : min;\n\n                max = rec.incomingBalance > max ? rec.incomingBalance : max;\n                max = rec.outgoingBalance > max ? rec.outgoingBalance : max;\n                max = rec.remainingBalance > max ? rec.remainingBalance : max;\n            }\n\n            (<any>(this.chartOptions)).vAxis.viewWindow.min = min;\n            (<any>(this.chartOptions)).vAxis.viewWindow.max = max;\n        }\n    }\n\n    private initChartOptions() {\n        this.chartOptions = GoogleChartsStyle.createOptions();\n\n        (<any>(this.chartOptions)).seriesType = 'bars';\n        (<any>(this.chartOptions)).series = {2: {type: 'line'}};\n\n        (<any>(this.chartOptions)).width = this.width;\n        (<any>(this.chartOptions)).height = this.height;\n\n        if (this.hideDates) {\n            (<any>(this.chartOptions)).hAxis.textPosition = 'none';\n        }\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW9udGhseS1zYXZpbmdzLXJlcG9ydC9tb250aGx5LXNhdmluZ3MtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { GoogleChartsStyle } from 'src/assets/skins/dark-times/google-charts-style';\nimport { MonthlyBalanceReportRecord } from 'src/app/model/monthly-balance-report-record';\n\n@Component({\n  selector: 'app-monthly-savings-report',\n  templateUrl: './monthly-savings-report.component.html',\n  styleUrls: ['./monthly-savings-report.component.css']\n})\nexport class MonthlySavingsReportComponent implements OnInit, OnChanges {\n    @Input() sourceDate : any[];\n    @Input() sourceDataXValueMapper : (rec) => any;\n    @Input() sourceDataYValueMapper : (rec) => any;\n\n    @Input() width : number;\n    @Input() height : number;\n    @Input() hideDates : boolean;\n\n    @Input() chartType : string;\n    @Input() forceMin : number;\n    @Input() forceMax : number;\n\n    @Input() chartColumnNames : string[];\n\n    private chartData = [];\n    private chartOptions = {};\n\n    constructor() { }\n\n    ngOnInit() {}\n\n    ngOnChanges() {\n        this.initChartOptions();\n\n        if (this.sourceDate) {\n            this.chartData = [];\n\n            let min : number = null;\n            let max : number = null;\n\n            for (let rec of this.sourceDate) {\n                let val = this.sourceDataYValueMapper ? this.sourceDataYValueMapper(rec) : 0;\n\n                this.chartData.push([\n                    this.sourceDataXValueMapper ? this.sourceDataXValueMapper(rec) : \"0\",\n                    val\n                ]);\n\n                if (max == null) {\n                    max = val;\n                }\n\n                if (min == null) {\n                    min = val;\n                }\n\n                max = (val > max ? val : max);\n                min = (val < min ? val : min);\n            }\n\n            (<any>(this.chartOptions)).vAxis.viewWindow.min = this.forceMin ? this.forceMin : min;\n            (<any>(this.chartOptions)).vAxis.viewWindow.max = this.forceMax ? this.forceMax : max;\n        }\n    }\n\n    private initChartOptions() {\n        this.chartOptions = GoogleChartsStyle.createOptions();\n\n        (<any>(this.chartOptions)).width = this.width;\n        (<any>(this.chartOptions)).height = this.height;\n\n        if (this.hideDates) {\n            (<any>(this.chartOptions)).hAxis.textPosition = 'none';\n        }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css']\n})\nexport class ProgressBarComponent implements OnInit {\n\n    @Input() private valueFromZeroToOneHundred : number;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VjdGlvbi1hY2NvdW50cy9hY2NvdW50cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { MatDialog } from '@angular/material';\nimport { AccountsManagerComponent } from '../accounts-manager/accounts-manager.component';\nimport { MoneyTransferFormComponent } from '../money-transfer-form/money-transfer-form.component';\nimport { DialogService } from 'src/app/services/dialog-service/dialog.service';\n\n\n@Component({\n  selector: 'app-section-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.css']\n})\nexport class AccountsSectionComponent implements OnInit {\n\n    private sourceXValueMapper : (rec) => any = (rec) => { return rec.recordYearMonth.toString(); };\n    private sourceYValueMapper : (rec) => any = (rec) => { return rec.incomingBalance + rec.outgoingBalance; };\n\n    constructor(private state : StateService, private dialog: MatDialog, private dialogService : DialogService) { }\n\n    ngOnInit() {\n        this.state.loadIncomeOrExpenseItems();\n\n        this.state.loadAccounts().subscribe((ret => {\n            if (this.state.accounts && this.state.accounts[0]) {\n                this.state.selectAccountId(this.state.accounts[0].id);\n            }\n        }));\n    }\n\n\n    private showAccountsManager() {\n        this.dialog.open(AccountsManagerComponent, {\n            width: '300px',\n            height: '300px'\n        });\n    }\n\n    private showMoneyTransferForm() {\n        this.dialogService.moneyTransferDialogServiceRef = \n            this.dialog.open(MoneyTransferFormComponent, {\n                width: '340px',\n                height: '200px'\n            }); \n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VjdGlvbi1kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { Account } from 'src/app/model/account';\nimport { IncomeOrExpenseItemCategory } from 'src/app/model/income-or-expense-item-category';\nimport { IncomeOrExpenseItem } from 'src/app/model/income-or-expense-item';\nimport { MonthlyReportSimpleRecord } from 'src/app/model/monthly-report-simple-record';\nimport { MonthlyExpensesReport } from 'src/app/model/monthly-expenses-report';\n\n@Component({\n  selector: 'app-section-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardSectionComponent implements OnInit {\n\n    private sourceXValueMapper : (rec) => any = (rec) => { return rec.recordYearMonth.toString(); };\n    private sourceYValueMappers : [] = [];\n\n    private selectedAccount : Account = null;\n    private selectedCategory : IncomeOrExpenseItemCategory = null;\n    private selectedItem : IncomeOrExpenseItem = null;\n\n    private contextItems : IncomeOrExpenseItem[] = null;\n\n    private monthlyExpensesReportChartData : MonthlyReportSimpleRecord[] = null;\n\n    private monthlyExpensesReportChartXValueMapper : (rec) => any = (rec) => {return rec.month; }\n    private monthlyExpensesReportChartYValueMapper : (rec) => any = (rec) => {return rec.value; }\n\n    constructor(private state : StateService) { }\n\n    ngOnInit() {\n        this.state.loadIncomeOrExpenseItems();\n        this.state.loadIncomeOrExpenseItemCategories();\n        this.state.loadMonthlyExpensesReports();\n\n        this.state.loadMonitoredCurrency().subscribe(mnCr => {\n            for(let mc of mnCr) {\n                this.sourceYValueMappers[mc.currencyTypeName.valueOf()]\n                          = (rec) => { return rec.remainingBalance / mc.lastCollectedValue.valueOf() };\n            }\n            \n        });\n\n        this.state.loadDeposits();\n        this.state.loadSummaryOfAllAccounts();\n    }\n\n    private getAccountValue(accId : Number) {\n        let acSum = this.state.accountSummaries[accId.valueOf()];\n        return acSum.runningSumIncoming + acSum.runningSumOutgoing;\n    }\n\n    private onAccountChanged() {\n        this.monthlyExpensesReportChartData = null;\n        this.computeMonthlyExpensesReportChartData();\n    }\n\n    private onCategoryChanged() {\n        this.monthlyExpensesReportChartData = null;\n        this.contextItems = null;\n        this.selectedItem = null;\n        this.computeMonthlyExpensesReportChartData();\n    }\n\n    private onItemChanged() {\n        this.monthlyExpensesReportChartData = null;\n        this.computeMonthlyExpensesReportChartData();\n    }\n\n    private isItemValidInContext(item : IncomeOrExpenseItem) : boolean {\n        return (!(this.selectedCategory)) || item.incomeOrExpenseItemCategoryId == this.selectedCategory.id;\n    }\n\n    private getValidIncomeOrExpenseItems() {\n        if (this.contextItems) {\n            return this.contextItems;\n        }\n\n        let ret = [];\n\n        for (let itm of this.state.incomeOrExpenseItems) {\n            if (this.isItemValidInContext(itm)) {\n                ret.push(itm);\n            }\n        }\n\n        return ret;\n    }\n\n    private computeMonthlyExpensesReportChartData() {\n        this.monthlyExpensesReportChartData = [];\n\n        if (this.selectedAccount) {\n            this.addMonthlyExpensesReportDataForAccount(this.selectedAccount.id);\n        } else {\n            for (let acct of this.state.accounts) {\n                this.addMonthlyExpensesReportDataForAccount(acct.id);\n            }\n        }\n    }\n\n    private addMonthlyExpensesReportDataForAccount(accountId : Number) {\n        let acctReport : MonthlyExpensesReport = this.findMonthlyExpensesAccountReport(accountId);\n\n        if (acctReport) {\n            for (let month of acctReport.months) {\n                let repMonth : MonthlyReportSimpleRecord = this.findReportMonthRecord(month.monthNumber);\n\n                for (let cat of month.categories) {\n                    if (!(this.selectedCategory) || this.selectedCategory.id == cat.categoryId) {\n\n                        for (let itm of cat.items) {\n                            if (!(this.selectedItem) || this.selectedItem.id == itm.itemId) {\n                                if (repMonth.value) {\n                                    repMonth.value += itm.totalExpenses.valueOf();\n                                } else {\n                                    repMonth.value = itm.totalExpenses.valueOf();\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n    }\n\n    private findMonthlyExpensesAccountReport(accountId : Number) : MonthlyExpensesReport {\n        for (let rep of this.state.monthlyExpensesReports) {\n            if (rep.accountId == accountId) {\n                return rep;\n            }\n        }\n\n        return null;\n    }\n\n    private findReportMonthRecord(monthNumber : Number) : MonthlyReportSimpleRecord {\n        for (let rec of this.monthlyExpensesReportChartData) {\n            if (rec.month == monthNumber.toString()) {\n                return rec;\n            }\n        }\n\n        let rec : MonthlyReportSimpleRecord = new MonthlyReportSimpleRecord();\n        rec.month = monthNumber.toString();\n        rec.value = 0;\n        this.monthlyExpensesReportChartData.push(rec);\n        return rec;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VjdGlvbi1kZXBvc2l0cy9kZXBvc2l0cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { Deposit } from 'src/app/model/deposit';\n\n@Component({\n  selector: 'app-section-deposits',\n  templateUrl: './deposits.component.html',\n  styleUrls: ['./deposits.component.css']\n})\nexport class DepositsSectionComponent implements OnInit {\n\n    constructor(private state : StateService) { }\n\n    ngOnInit() {\n        this.state.deposits = null;\n        this.state.loadDeposits();\n        this.state.selectedDeposit = null;\n    }\n\n    private getTotalDepositsValue() : number {\n        return this.state.totalDepositsValue;\n    }\n\n    private getTotalDepositsInterest() : number {\n        return this.state.totalDepositsInterest;\n    }\n\n    private getFirstDeposit() : Deposit {\n        return this.state.firstDepositToReachMaturity;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VjdGlvbi1leGNoYW5nZS1yYXRlcy9zZWN0aW9uLWV4Y2hhbmdlLXJhdGVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/state-service/state.service';\nimport { ExchangeRateHistoryRecord } from 'src/app/model/ExchangeRateHistoryRecord';\n\n@Component({\n  selector: 'app-section-exchange-rates',\n  templateUrl: './section-exchange-rates.component.html',\n  styleUrls: ['./section-exchange-rates.component.css']\n})\nexport class SectionExchangeRatesComponent implements OnInit {\n    private currencies : string[] = [];\n    private chartData : ExchangeRateHistoryRecord[] = [];\n\n    private sourceXValueMapper : (rec) => any = (rec) => { return rec.date.toString().split(\"T\")[0]; }\n    private sourceYValueMapper : (rec) => any = (rec) => { return rec.value; }\n\n    constructor( private state : StateService ) { }\n\n    ngOnInit() {\n        this.state.loadExchangeRatesHistory();\n    }\n\n    private getCurrencies() : string[] {\n\n        if (this.currencies.length == 0) {\n            this.state.exchageRatesHistory.forEach((val, key) => {\n                this.currencies.push(key.valueOf());\n            });\n        }\n\n        return this.currencies;\n    }\n\n    private getChartData(crName : string) {\n        let ret = this.chartData[crName];\n\n        if (!ret) {\n            ret = this.state.exchageRatesHistory.get(crName);\n            this.chartData.push(ret);\n        }\n\n        return ret;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VjdGlvbi1tYWluL21haW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-section-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainSectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2xpZGluZy1tZW51L3NsaWRpbmctbWVudS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigationService } from 'src/app/services/navigation-service/navigation.service';\nimport { trigger, state, transition, style, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-sliding-menu',\n  templateUrl: './sliding-menu.component.html',\n  styleUrls: ['./sliding-menu.component.css'],\n\n  animations: [\n    trigger('pullMenu', [\n      state('up'  , style({top: '-67px'})),\n      state('down', style({top:  '-2px'})),\n      transition('down=>up', animate('300ms')),\n      transition('up=>down', animate('100ms'))\n    ]),\n  ]\n})\nexport class SlidingMenuComponent implements OnInit {\n\n    constructor( public navigation : NavigationService ) { }\n\n    currentState : string = 'up';\n\n    ngOnInit() {\n    }\n\n    public onMouseOver() {\n        this.currentState = 'down';\n    }\n\n    public onMouseOut() {\n        this.currentState = 'up';\n    }\n\n}\n","import { Identifiable } from './identifiable';\r\n\r\nexport class AccountRecord extends Identifiable {\r\n    public accountId : Number;\r\n    public date : Date;\r\n    public incomeOrExpenseItemId : Number;\r\n    public value : Number;\r\n}\r\n","import { Identifiable } from './identifiable';\r\n\r\nexport class Account extends Identifiable {\r\n    public name : String;\r\n\r\n    constructor(id : Number, name : String) {\r\n      super(id);\r\n      this.name = name;\r\n    }\r\n}\r\n","import { Nameable } from './nameable';\r\n\r\nexport class Bank extends Nameable {\r\n\r\n    constructor(id : Number, name : String) {\r\n        super(id, name);\r\n    }\r\n\r\n}","import { Identifiable } from './identifiable';\r\n\r\nexport class Deposit extends Identifiable {\r\n    sourceAccountId : Number;\r\n    accountNumber : String;\r\n    bankId : Number;\r\n    startDate : Date;\r\n    endDate : Date;\r\n    value : Number;\r\n    interestPercent : Number;\r\n}","export class Identifiable {\r\n  public id : Number;\r\n\r\n  constructor(id : Number) {\r\n    this.id = id;\r\n  }\r\n}\r\n","import { Nameable } from './nameable';\r\n\r\nexport class IncomeOrExpenseItemCategory extends Nameable {\r\n\r\n}\r\n","import { Nameable } from './nameable';\r\n\r\nexport class IncomeOrExpenseItem extends Nameable {\r\n    public incomeOrExpenseItemCategoryId : Number;\r\n    public lastUsedValue : Number;\r\n}\r\n","export class MonthlyBalanceReportRecord {\r\n    public recordYearMonth : number;\r\n    public startingBalance : number;\r\n    public incomingBalance : number;\r\n    public outgoingBalance : number;\r\n    public remainingBalance : number;\r\n\r\n    constructor(recordYearMonth:number, startingBalance:number, incomingBalance:number, outgoingBalance:number) {\r\n        this.recordYearMonth = recordYearMonth;\r\n        this.startingBalance = startingBalance;\r\n        this.incomingBalance = incomingBalance;\r\n        this.outgoingBalance = outgoingBalance;\r\n        this.remainingBalance = this.startingBalance + this.incomingBalance + this.outgoingBalance;\r\n    }\r\n}\r\n","export class MonthlyReportSimpleRecord {\r\n    public month : string;\r\n    public value : number;\r\n}","import { Identifiable } from './identifiable';\r\n\r\nexport class Nameable extends Identifiable {\r\n    public name : String;\r\n\r\n    constructor(id : Number, name : String) {\r\n        super(id);\r\n        this.name = name;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'isoDate'\n})\nexport class IsoDatePipe implements PipeTransform {\n\n    transform(value: any, ...args: any[]): any {\n      return new Date(value).toISOString().split(\"T\")[0];\n    }\n\n}\n","\r\nexport class DomOps {\r\n    public static getTagByTypeAndName(tagType : string, tagNameAttributeValue : string) : any {\r\n        var links = document.getElementsByTagName(tagType);\r\n\r\n        for(var l = 0 ; l < links.length ; l++) {\r\n            var link = links[l];\r\n            if (link.getAttribute(\"name\") == tagNameAttributeValue) {\r\n                return link;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'YYYY-MM-DD',\r\n    monthYearLabel: 'YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'YYYY',\r\n  },\r\n};\r\n","\r\nexport class NavigationSection {\r\n    public id               : number;\r\n    public historySkipFlag  : number;\r\n    public nBackSteps       : number;\r\n    public name             : string;\r\n    public iconCssClass     : string;\r\n\r\n    constructor(id : number, name : string, historySkipFlag : number, nBackSteps : number, iconCssClass : string) {\r\n        this.id               = id              ;\r\n        this.historySkipFlag  = historySkipFlag ;\r\n        this.nBackSteps       = nBackSteps      ;\r\n        this.name             = name            ;\r\n        this.iconCssClass     = iconCssClass    ;\r\n    }\r\n}\r\n\r\nexport class Navigation {\r\n    private sections          : NavigationSection[] = [];\r\n    private currentSectionId  : number              = 0 ;\r\n    private history           : number[]            = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public withSectionNameAndIcon(sectionId : number, sectionName : string, iconCssClass : string) : Navigation {\r\n        var navSection : NavigationSection = new NavigationSection(sectionId, sectionName, null, null, iconCssClass);\r\n        this.sections[sectionId] = navSection;\r\n        return this;\r\n    }\r\n\r\n    public startingAtSection(sectionId : number) : Navigation {\r\n        this.currentSectionId = sectionId;\r\n        return this;\r\n    }\r\n\r\n    public skippingSectionIdFromHistory(sectionId : number) : Navigation {\r\n        this.sections[sectionId].historySkipFlag = 1;\r\n        return this;\r\n    }\r\n\r\n    public notSkippingSectionIdFromHistory(sectionId : number) : Navigation {\r\n      this.sections[sectionId].historySkipFlag = 0;\r\n        return this;\r\n    }\r\n\r\n    public poppingStepsFromHistoryOnSectionGoBack(sectionId : number, nStepsToPop : number) : Navigation {\r\n        this.sections[sectionId].nBackSteps = nStepsToPop;\r\n        return this;\r\n    }\r\n\r\n    public navigateToSectionId(sectionId : number) {\r\n        this.putSectionIdIntoHistory(this.currentSectionId);\r\n        this.currentSectionId = sectionId;\r\n    }\r\n\r\n    public navigateBack() {\r\n        let nSectionsToPop = this.sections[this.currentSectionId].nBackSteps;\r\n        if (nSectionsToPop == null || nSectionsToPop == undefined) {\r\n            nSectionsToPop = 1;\r\n        }\r\n\r\n        for (var n = 0 ; n < nSectionsToPop ; n++) {\r\n            if (this.history.length > 0) {\r\n                this.currentSectionId = this.history.pop();\r\n            }\r\n        }\r\n    }\r\n\r\n    private putSectionIdIntoHistory(sectionId : number) {\r\n        if (this.sections[sectionId].historySkipFlag == 1) {\r\n            return;\r\n        }\r\n\r\n        this.history.push(sectionId);\r\n    }\r\n\r\n    public getCurrentSection() : NavigationSection {\r\n        return this.sections[this.currentSectionId];\r\n    }\r\n\r\n    public getSections() : NavigationSection[] {\r\n        return this.sections;\r\n    }\r\n}\r\n","export class ParamsBuilder {\r\n    private params : Map<string, string> = new Map<string, string>();\r\n\r\n    public withStringParam(key : string, value : String) : ParamsBuilder {\r\n        this.params.set(key, value.valueOf());\r\n        return this;\r\n    }\r\n\r\n    public withNumberParam(key : string, value : Number) {\r\n        this.params.set(key, value.valueOf().toString());\r\n        let n : number = 0;\r\n        return this;\r\n    }\r\n\r\n\r\n    public build() : Map<string, string> {\r\n        return this.params;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n  constructor() { }\n\n  public getAttributeValue(attributeName : string) : string {\n    let confElmArray : any = document.getElementsByTagName(\"configuration\");\n    if (confElmArray) {\n      let config : HTMLElement = confElmArray[0];\n      if (config) {\n        return config.getAttribute(attributeName);\n      }\n    }\n    throw \"index.html is missing the <configuration> tag\";\n  }\n}","import { Injectable } from '@angular/core';\n\nimport { HttpClientWrapperService, RequestType, ResponseType } from '../http-client-wrapper/http-client-wrapper.service';\nimport { Observable } from 'rxjs';\nimport { Identifiable } from 'src/app/model/identifiable';\nimport { environment } from 'src/environments/environment';\nimport { ConfigurationService } from '../configuration-service/configuration.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n    constructor( private httpClientWrapper : HttpClientWrapperService, private configuration : ConfigurationService) {\n        this.httpClientWrapper.setBaseUrl(configuration.getAttributeValue(\"backendUrl\"));\n    }\n\n    public list<R extends Identifiable[]>(basePath:string) : Observable<R> {\n        return this.httpClientWrapper.request( RequestType.GET, basePath + \"/list\", null);\n    }\n\n    public save<R extends Identifiable>(basePath:string, item : R, customOperation : string = null) : Observable<R> {\n        return this.httpClientWrapper.request( RequestType.POST, basePath + (customOperation ? (\"/\" + customOperation) : \"/save\"), item );\n    }\n\n    public delete<R extends Identifiable>(basePath:string, item : R) : Observable<String> {\n        return this.httpClientWrapper.request(RequestType.DELETE, basePath + \"/delete\", null, new Map([[\"id\", item.id.toFixed()]]));\n    }\n\n    public get<R>(url: string, params?: Map<string, string>) : Observable<R> {\n        return this.httpClientWrapper.request(RequestType.GET, url, null, params);\n    }\n\n    public post<R>(url: string, params?: Map<string, string>) : Observable<R> {\n        return this.httpClientWrapper.request(RequestType.POST, url, null, params);\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { DialogErrorComponent } from 'src/app/components/dialog-error/dialog-error.component';\nimport { DialogYesNoComponent } from 'src/app/components/dialog-yes-no/dialog-yes-no.component';\nimport { Observable, Subject } from 'rxjs';\nimport { MoneyTransferFormComponent } from 'src/app/components/money-transfer-form/money-transfer-form.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n    public errDialogRef : MatDialogRef<DialogErrorComponent>;\n    public yesNoDialogRef : MatDialogRef<DialogYesNoComponent>;\n    public dialogMessage : string;\n\n    public moneyTransferDialogServiceRef : MatDialogRef<MoneyTransferFormComponent>;\n\n    private dialogYesNoResponseSubject : Subject<boolean> = new Subject<boolean>();\n    public dialogYesNoResponseObservable : Observable<boolean> = this.dialogYesNoResponseSubject.asObservable();\n\n    constructor() { \n\n    }\n\n    public closeErrDialog() {\n        this.errDialogRef.close();\n        this.dialogMessage = \"\";\n    }\n\n    public closeYesNoDialog(answer: boolean) {\n        this.yesNoDialogRef.close();\n        this.dialogMessage = \"\";\n\n        this.dialogYesNoResponseSubject.next(answer);\n        \n\n        // Make sure other services only subscribe once to this thing\n        this.dialogYesNoResponseSubject = new Subject<boolean>();\n        this.dialogYesNoResponseObservable = this.dialogYesNoResponseSubject.asObservable();\n    }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { share } from 'rxjs/operators';\n\n\n\n\n/**\n * used by the request() method\n */\nexport enum RequestType {\n    POST    = 'POST',\n    GET     = 'GET',\n    DELETE  = 'DELETE',\n    PUT     = 'PUT',\n    HEAD    = 'HEAD',\n    JSONP   = 'JSONP',\n    OPTIONS = 'OPTIONS',\n    PATCH   = 'PATCH'\n}\n\n/**\n * used by the request() method\n */\nexport enum ResponseType {\n    ARRAYBUFFER = 'arraybuffer',\n    TEXT        = 'text',\n    BLOB        = 'blob',\n    JSON        = 'json'\n}\n\n\n\n/**\n * Wrapper over some of the HttpClient's functionality, to make the calls easier and shorter\n */\n// TODO: Consider creating a builder - depends on the complexity of the project\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpClientWrapperService {\n\n   /**\n     * Base URL which will be pre-pended to all requests\n     */\n    private baseUrl: string;\n\n    constructor(private httpClient: HttpClient) { }\n\n    public setBaseUrl(val: string) {\n        this.baseUrl = val;\n    }\n\n    public getBaseUrl(): string {\n        return this.baseUrl;\n    }\n\n\n    /**\n     * Simplified version of the request from the HttpClient,\n     * designed for in-line calls instead of having to instantiate headers and other things\n     */\n    public request<R>(\n        requestType: RequestType,\n        url: string,\n        body: any,\n        params?: Map<string, string>,\n        headers?: Map<string, string>,\n        responseType?: ResponseType\n    ): Observable<R> {\n     // Workaround to allow the parameters to be passed to the constructor of HttpRequest\n        const requestTypeForced: any = requestType.valueOf();\n        const responseTypeForced: any = responseType == null ? 'json' : responseType.valueOf();\n\n     // Build the params (if any)\n        let httpParams: HttpParams = null;\n\n        if (params != null) {\n            httpParams = new HttpParams();\n\n            params.forEach((value: string, key: string) => {\n                httpParams = httpParams.append(key, value);\n            });\n        }\n\n     // Build the headers (if any)\n        let httpHeaders: HttpHeaders = null;\n\n        if (headers != null) {\n            httpHeaders = new HttpHeaders();\n\n            headers.forEach((value: string, key: string) => {\n                httpHeaders = httpHeaders.append(key, value);\n            });\n        }\n\n     // Send the request\n        return this.httpClient.request<R> (\n                            requestTypeForced,\n                            this.baseUrl + '/' + url,\n                            {\n                                body: body,\n                                headers: httpHeaders,\n                                observe: 'body',\n                                params: httpParams,\n                                responseType: responseTypeForced,\n                                reportProgress: false,\n                                withCredentials: true\n                            }\n                        )\n                        .pipe(\n                            share()\n                         )\n                         .pipe(\n                            catchError(err => of(err.error))\n                         )\n                        ;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Navigation, NavigationSection } from 'src/app/reusable/navigation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n\n    /* SETUP NAVIGATION HERE -------------------------------------------------------------------------------- */\n\n    public APP_SECTION_MAIN           : number = 0;\n    public APP_SECTION_DASHBOARD      : number = 1;\n    public APP_SECTION_ACCOUNTS       : number = 2;\n    public APP_SECTION_DEPOSITS       : number = 3;\n    public APP_SECTION_EXCHANGE_RATES : number = 4;\n\n    public navigation : Navigation = new Navigation()\n                                            .withSectionNameAndIcon(this.APP_SECTION_MAIN           , \"Lists Editor\"  , \"app-section-main-icon\"           )\n                                            .withSectionNameAndIcon(this.APP_SECTION_DASHBOARD      , \"Dashboard\"     , \"app-section-dashboard-icon\"      )\n                                            .withSectionNameAndIcon(this.APP_SECTION_ACCOUNTS       , \"Accounts\"      , \"app-section-accounts-icon\"       )\n                                            .withSectionNameAndIcon(this.APP_SECTION_DEPOSITS       , \"Deposits\"      , \"app-section-deposits-icon\"       )\n                                            .withSectionNameAndIcon(this.APP_SECTION_EXCHANGE_RATES , \"Exchange Rates\", \"app-section-exchange-rates-icon\" )\n\n                                            .startingAtSection(this.APP_SECTION_DASHBOARD)\n\n                                            .poppingStepsFromHistoryOnSectionGoBack(this.APP_SECTION_MAIN, 0);\n  /* ====================================================================================================== */\n\n    // Cache the current section so it doesn't have to be looked up into the navigation class all the time\n    public currentSection : NavigationSection = this.navigation.getCurrentSection();\n\n    constructor() { }\n\n    public getCurrentSection() : NavigationSection {\n        return this.navigation.getCurrentSection();\n    }\n\n    public getSections() : NavigationSection[] {\n        return this.navigation.getSections();\n    }\n\n    public navigateToSectionId(sectionId : number) {\n        this.navigation.navigateToSectionId(sectionId);\n        this.currentSection = this.navigation.getCurrentSection();\n    }\n\n    public navigateBack() {\n        this.navigation.navigateBack();\n        this.currentSection = this.navigation.getCurrentSection();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Account } from 'src/app/model/account';\nimport { AccountSummary } from 'src/app/model/account-summary';\nimport { DataService } from '../data-service/data.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { AccountRecord } from 'src/app/model/account-record';\nimport { IncomeOrExpenseItem } from 'src/app/model/income-or-expense-item';\nimport { MatDialog } from '@angular/material';\nimport { DialogErrorComponent } from 'src/app/components/dialog-error/dialog-error.component';\nimport { DialogYesNoComponent } from 'src/app/components/dialog-yes-no/dialog-yes-no.component';\nimport { DialogService } from '../dialog-service/dialog.service';\nimport { ErrorResult } from 'src/app/model/error-result';\nimport { OkResult } from 'src/app/model/ok-result';\nimport { IncomeOrExpenseItemCategory } from 'src/app/model/income-or-expense-item-category';\nimport { Nameable } from 'src/app/model/nameable';\nimport { Identifiable } from 'src/app/model/identifiable';\nimport { Bank } from 'src/app/model/bank';\nimport { Deposit } from 'src/app/model/deposit';\nimport { MonthlyBalanceReportRecord } from 'src/app/model/monthly-balance-report-record';\nimport { ParamsBuilder } from 'src/app/reusable/params.builder';\nimport { MonitoredCurrency } from 'src/app/model/monitored-currency';\nimport { ExchangeRateHistoryRecord } from 'src/app/model/ExchangeRateHistoryRecord';\nimport { MonthlyExpensesReport } from 'src/app/model/monthly-expenses-report';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n    public accounts: Account[] = [];\n    public selectedAccount : Account;\n    public selectedAccountSummary : AccountSummary;\n    public selectedAccountRecords : AccountRecord[];\n    public selectedAccountRecord : AccountRecord;\n\n    public accountSummaries : AccountSummary[];\n    public accountSummariesLoaded : boolean = false;\n\n    public incomeOrExpenseItems : IncomeOrExpenseItem[];\n    public incomeOrExpenseItemCategories : IncomeOrExpenseItemCategory[];\n    public selectedIncomeOrExpenseItemCategory : IncomeOrExpenseItemCategory;\n\n    // https://stackoverflow.com/questions/37587732/how-to-call-another-components-function-in-angular2\n    private selectedRecordChangedMessageSource : BehaviorSubject<AccountRecord> = new BehaviorSubject(null);\n    public selectedRecordChangedObservable : Observable<AccountRecord> = this.selectedRecordChangedMessageSource.asObservable();\n\n    private selectedDepositChangedMessageSource : BehaviorSubject<Deposit> = new BehaviorSubject(null);\n    public selectedDepositChangedObservable : Observable<Deposit> = this.selectedDepositChangedMessageSource.asObservable();\n\n    private loadedDepositsMessageSource : BehaviorSubject<Deposit[]> = new BehaviorSubject(null);\n    public loadedDepositsMessageSourceObservable : Observable<Deposit[]> = this.loadedDepositsMessageSource.asObservable();\n\n    private loadedMonthlyAccountBalanceReportSource : BehaviorSubject<MonthlyBalanceReportRecord[]> = new BehaviorSubject(null);\n    public loadedMonthlyAccountBalanceReportObservable : Observable<MonthlyBalanceReportRecord[]> = this.loadedMonthlyAccountBalanceReportSource.asObservable();\n\n\n    public banks : Bank[];\n\n    public deposits : Deposit[];\n    public selectedDeposit : Deposit;\n\n    public monthlyBalanceReport : MonthlyBalanceReportRecord[] = [];\n    public inlineHistoryReportMonths : number = 6;\n\n    public monthlyDepositsBalanceReport : MonthlyBalanceReportRecord[] = [];\n\n    public supportedCurrencies : String [];\n    public monitoredCurrencies : MonitoredCurrency[];\n\n    public exchageRatesHistory : Map<String, ExchangeRateHistoryRecord[]> = new Map<String, ExchangeRateHistoryRecord[]>();\n    public exchangeRatesHistoryLengthDays : number = 200;\n    public allExchangeRatesHistoryLoaded : boolean = false;\n\n    public totalDepositsValue : number;\n    public totalDepositsInterest : number;\n    public firstDepositToReachMaturity : Deposit = null;\n\n    public monthlyExpensesReports : MonthlyExpensesReport[];\n\n    constructor(private dataService : DataService, private dialog: MatDialog, private dialogService : DialogService) { }\n\n    public loadMonthlyExpensesReports() {\n        if (this.monthlyExpensesReports) {\n            return;\n        }\n\n        let params = new ParamsBuilder().withNumberParam(\"startMonth\", this.computeMonthNumberMinusXMonths(this.inlineHistoryReportMonths)).build();\n\n        this.dataService.get<MonthlyExpensesReport[]>(\"reports/accounts/monthlyExpenses\", params).subscribe(\n            response => {\n                let errMsg : string = StateService.resultErrorMsg(response);\n\n                if (errMsg) {\n                    this.showErrDialog(\"ERROR: \" + errMsg);\n                } else {\n                    this.monthlyExpensesReports = response;\n                }\n            }\n        );\n    }\n\n    private clearExchangeRatesHistory() {\n        this.exchageRatesHistory = new Map<String, ExchangeRateHistoryRecord[]>();\n        this.allExchangeRatesHistoryLoaded = false;\n    }\n\n    public loadExchangeRatesHistory() {\n        this.allExchangeRatesHistoryLoaded = false;\n\n        if (this.monitoredCurrencies) {\n            this.loadExchangeRatesHistoryForAllMonitoredCurrencies();\n        } else {\n            this.loadMonitoredCurrency().subscribe(\n                result => {\n                    if (this.monitoredCurrencies) {\n                        this.loadExchangeRatesHistoryForAllMonitoredCurrencies();\n                    }\n                }\n            );\n        }\n    }\n\n    private updateExchangeRatesHistoryRecordsState() {\n        this.allExchangeRatesHistoryLoaded = false;\n\n        for (let c of this.monitoredCurrencies) {\n            if (!(this.exchageRatesHistory.get(c.currencyTypeName))) {\n                return;\n            }\n        }\n\n        this.allExchangeRatesHistoryLoaded = true;\n    }\n\n    private loadExchangeRatesHistoryForAllMonitoredCurrencies() {\n        for (let cr of this.monitoredCurrencies) {\n            this.loadExchangeRatesHistoryForCurrency(cr);\n        }\n    }\n\n    public loadExchangeRatesHistoryForCurrency(currency : MonitoredCurrency) {\n        if (this.exchageRatesHistory.get(currency.currencyTypeName)) {\n            this.updateExchangeRatesHistoryRecordsState();\n            return;\n        }\n\n        let params = new ParamsBuilder()\n                            .withNumberParam(\"currencyId\", currency.id)\n                            .withStringParam(\"sinceDate\", this.computeDateMinusXDays(this.exchangeRatesHistoryLengthDays))\n                        .build();\n\n        this.dataService.get<ExchangeRateHistoryRecord[]>(\"currency/listHistory\", params).subscribe(\n            result => {\n                let errMsg : string = StateService.resultErrorMsg(result);\n\n                if (errMsg) {\n                    this.showErrDialog(\"ERROR: \" + errMsg);\n                } else {\n                    this.exchageRatesHistory.set(currency.currencyTypeName, result);\n                    this.updateExchangeRatesHistoryRecordsState();\n                }\n            }\n        );\n    }\n\n    public loadMonitoredCurrency() : Observable<MonitoredCurrency[]> {\n        let obs = this.dataService.get<MonitoredCurrency[]>(\"currency/list\")\n        \n        obs.subscribe(monCr => {\n            this.monitoredCurrencies = monCr;\n\n            this.dataService.get<String[]>(\"currency/listSupportedCurrencies\").subscribe(\n                supCr => {\n                    this.supportedCurrencies = [];\n                    for (let sc of supCr) {\n                        if (!(this.isCurrencyMonitored(sc))) {\n                            this.supportedCurrencies.push(sc);\n                        }\n                    }\n                    this.clearExchangeRatesHistory();\n                }\n            );\n        });\n\n        return obs;\n    }\n\n    public monitorCurrency(currencyName : String) {\n        let params = new ParamsBuilder().withStringParam(\"currencyName\", currencyName).build();\n\n        this.dataService.post<MonitoredCurrency>(\"currency/monitorCurrency\", params)\n        .subscribe(\n            mCr => {\n                this.monitoredCurrencies.push(mCr);\n                this.popSupportedCurrency(currencyName);\n                this.clearExchangeRatesHistory();\n            }\n        );\n        \n    }\n\n    public unMonitorCurrency(cr : MonitoredCurrency) {\n        this.dataService.delete<MonitoredCurrency>(\"currency\", cr).subscribe(\n            result => {\n                let errMsg : string = StateService.resultErrorMsg(result);\n\n                if (errMsg) {\n                    this.showErrDialog(\"ERROR: \" + errMsg);\n                } else {\n                    this.supportedCurrencies.push(cr.currencyTypeName);\n                    this.popMonitoredCurrency(cr);\n                    this.clearExchangeRatesHistory();\n                }\n            }\n        );\n    }\n\n    public updateCurrenciesFromSource() {\n        let obs = this.dataService.get<String>(\"currency/updateCurrenciesFromSource\");\n        \n        obs.subscribe(\n            result => {\n                let errMsg : string = StateService.resultErrorMsg(result);\n\n                if (errMsg) {\n                    this.showErrDialog(\"ERROR: \" + errMsg);\n                } else {\n                    this.loadMonitoredCurrency();\n                }\n            }\n        );\n\n        return obs;\n    }\n\n    private popSupportedCurrency(spCrName : String) {\n        let oldArr : String[] = this.supportedCurrencies;\n        this.supportedCurrencies = [];\n\n        for (let c of oldArr) {\n            if (c != spCrName) {\n                this.supportedCurrencies.push(c);\n            }\n        }\n    }\n\n    private popMonitoredCurrency(mc : MonitoredCurrency) {\n        let oldArr : MonitoredCurrency[] = this.monitoredCurrencies;\n        this.monitoredCurrencies = [];\n\n        for (let amc of oldArr) {\n            if (amc.id != mc.id) {\n                this.monitoredCurrencies.push(amc);\n            }\n        }\n    }\n\n    private isCurrencyMonitored(crName : String) : boolean {\n        for (let mCr of this.monitoredCurrencies) {\n            if (mCr.currencyTypeName == crName) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public loadMonthlyDepositsBalanceReport() {\n        this.loadMonthlyBalanceReport(null, \"deposits/monthlyBalance\", ret => { this.monthlyDepositsBalanceReport = ret });\n    }\n\n    public loadMonthlyBalanceReportForCurrentAccount() {\n        if (!(this.selectedAccount)) {\n            return;\n        }\n\n        this.loadMonthlyBalanceReport(this.selectedAccount.id, \"accounts/monthlyBalance\", ret => {this.monthlyBalanceReport = ret;});\n    }\n\n    private loadMonthlyBalanceReport(accountId : Number, reportPath : string, callback : (ret : MonthlyBalanceReportRecord[]) => void) {\n        // Build the params map for the request\n        let startMonth : number = this.computeMonthNumberMinusXMonths(this.inlineHistoryReportMonths);\n        let pBbuilder = new ParamsBuilder().withNumberParam(\"startMonth\", startMonth);\n        if (accountId) {\n            pBbuilder = pBbuilder.withNumberParam(\"accountId\", accountId);\n        }\n        let params = pBbuilder.build();\n\n        // Send the requeest and process the result upon response arrival\n        this.dataService.get<MonthlyBalanceReportRecord[]>(\"reports/\" + reportPath, params)\n        .subscribe(ret => {\n            let targetArray : MonthlyBalanceReportRecord[] = [];\n\n            for(let rec of ret) {\n                targetArray.push(\n                    new MonthlyBalanceReportRecord(\n                        rec.recordYearMonth,\n                        rec.startingBalance,\n                        rec.incomingBalance,\n                        rec.outgoingBalance\n                    )\n                );\n            }\n            callback(targetArray);\n        });\n    }\n\n    private computeMonthNumberMinusXMonths(x : number) : number {\n        let today : Date = new Date();\n        let xMonthsAgo = new Date(); xMonthsAgo.setTime(today.getTime() - (x * 20 * 24*60*60*1000));\n\n        let year : number = xMonthsAgo.getUTCFullYear();\n        let month : number = xMonthsAgo.getUTCMonth();\n\n        return (year * 100) + month;\n    }\n\n    private computeDateMinusXDays(x : number) : String {\n        let d : Date = new Date(new Date().getDate() - x);\n        return this.formatDate(d);\n    }\n\n    public formatDate(d : Date) : String {\n        return d.getUTCFullYear() + \"-\" + this.twoDigits(d.getMonth()) + \"-\" + this.twoDigits(d.getUTCDay());\n    }\n\n    private twoDigits(n : number) : String {\n        if (n < 10) {\n            return \"0\" + n;\n        }\n\n        return \"\" + n;\n    }\n\n    public loadDeposits() {\n        if (this.deposits == null || this.deposits == undefined) {\n            this.dataService.list<Deposit[]>(\"deposits\").subscribe(\n                deposits => {\n                    let errMsg : string = StateService.resultErrorMsg(deposits);\n\n                    if (errMsg) {\n                        this.showErrDialog(\"ERROR : \" + errMsg);\n                        this.selectDeposit(this.selectedDeposit); // Select again to make sure the edit form is updated\n                    } else {\n                        this.deposits = deposits;\n                        this.selectedDeposit = null;\n                        this.loadedDepositsMessageSource.next(this.deposits);\n\n                        this.loadMonthlyDepositsBalanceReport();\n                        this.cacheDepositsStatistics();\n                    }\n                }\n            );\n        }\n    }\n\n    private cacheDepositsStatistics() {\n        this.totalDepositsValue = 0;\n        this.totalDepositsInterest = 0;\n\n        if (this.deposits && this.deposits.length > 0) {\n            this.firstDepositToReachMaturity = null;\n\n            for (let dep of this.deposits) {\n                // Cache the counters\n                this.totalDepositsValue += dep.value ? dep.value.valueOf() : 0;\n                this.totalDepositsInterest += dep.value && dep.interestPercent ? (dep.value.valueOf() * dep.interestPercent.valueOf() / 100) : 0;\n\n                // Find the first deposit to reach matureity\n                if (this.firstDepositToReachMaturity == null || this.firstDepositToReachMaturity.endDate > dep.endDate) {\n                    this.firstDepositToReachMaturity = dep;\n                }\n            }\n        }\n    }\n\n    public newDeposit() {\n        if (this.accounts == null || this.accounts.length == 0) {\n            this.showErrDialog(\"At least one account must be registered before creating a deposit\");\n            return;\n        }\n\n        if (this.banks == null || this.banks.length == 0) {\n            this.showErrDialog(\"At least one bank must be registered before creating a deposit\");\n            return;\n        }\n\n        this.selectedDeposit = new Deposit(0);\n\n        this.selectedDeposit.sourceAccountId = this.accounts[0].id;\n        this.selectedDeposit.bankId = this.banks[0].id;\n        this.selectedDeposit.accountNumber = \"New deposit\";\n        this.selectedDeposit.startDate = new Date();\n        this.selectedDeposit.endDate = this.addYears(this.selectedDeposit.startDate, 1);\n\n        this.deposits.push(this.selectedDeposit);\n\n        this.resetCatalogues();\n    }\n\n    private resetCatalogues() {\n        this.incomeOrExpenseItemCategories = null;\n        this.incomeOrExpenseItems = null;\n    }\n\n    private addYears(date : Date, nYears : number) : Date {\n        let year  = date.getFullYear();\n        let month = date.getMonth();\n        let day   = date.getDay();\n\n        return new Date(year + nYears, month, day);\n    }\n\n    public selectDeposit(deposit : Deposit) {\n        this.selectedDeposit = deposit;\n        this.selectedDepositChangedMessageSource.next(this.selectedDeposit); // propagate the message\n    }\n\n    public saveSelectedDeposit(saveOnlyAccountNumber : boolean = false) {\n        this.dataService.save<Deposit>(\"deposits\", this.selectedDeposit, (saveOnlyAccountNumber ? \"saveAccountNumber\" : null)).subscribe(\n            deposit => {\n                let errMsg : string = StateService.resultErrorMsg(deposit);\n\n                if (errMsg) {\n                    this.showErrDialog(\"ERROR : \" + errMsg);\n                    this.selectDeposit(this.selectedDeposit); // Select again to make sure the edit form is updated\n                } else {\n                    this.selectedDeposit.id = deposit.id;\n                    this.integrateIdentifiable(deposit, this.deposits);\n                    this.selectedDeposit = null;\n                }\n            }\n        );\n    }\n\n    public loadBanks() {\n        if (this.banks == null || this.banks == undefined) {\n            this.dataService.list<Bank[]>(\"banks\").subscribe(\n                banks => {\n                    this.banks = banks;\n                }\n            );\n        }\n    }\n\n    public saveBank(bank : Bank) {\n        this.dataService.save<Bank>(\"banks\", bank).subscribe(\n            bnk => {\n                bank.id = bnk.id;\n                this.integrateIdentifiable(bnk, this.banks);\n            }\n        );\n    }\n\n    public getBank(id : Number) {\n        return this.getIdentifiable<Bank>(this.banks, id);\n    }\n\n    private getIdentifiable<T extends Identifiable>(itemsArray : T[], id : Number) : T {\n        for(let item of itemsArray) { if (item.id == id) { return item; } }\n        return null;\n    }\n\n    public loadAccounts() : Observable<Account[]> {\n        let ret : Observable<Account[]> = this.dataService.list<Account[]>(\"accounts\");\n\n        ret.subscribe((result : Account[]) => {\n            this.accounts = result;\n            this.selectedAccount = (result[0] == null || result[0] == undefined) ? null : result[0];\n        });\n\n        return ret;\n    }\n\n    public selectAccountId(accountId : Number){\n        for (let acc of this.accounts) {\n            if (acc.id == accountId) {\n                this.selectedAccount = acc;\n                this.clearSelectedAccountRecord();\n                break;\n            }\n        }\n\n        this.loadSelectedAccountSummary().subscribe(ret => {\n            this.loadSelectedAccountRecords();\n        });\n\n        this.loadMonthlyBalanceReportForCurrentAccount();\n    }\n\n    public saveAccount(account : Account) {\n        this.dataService.save<Account>(\"accounts\", account).subscribe(\n            acc => {\n                account.id = acc.id;\n                this.integrateIdentifiable(account, this.accounts);\n            }\n        );\n    }\n\n    public getAccount(id : Number) : Account {\n        return this.getIdentifiable<Bank>(this.accounts, id);\n    }\n\n    public selectAccountRecord(rec : AccountRecord) {\n        this.selectedAccountRecord = rec; // set the selected record\n        this.selectedRecordChangedMessageSource.next(this.selectedAccountRecord); // propagate the message\n\n    }\n\n    public saveSelectedAccountRecord() {\n        this.dataService.save<AccountRecord>(\"records\", this.selectedAccountRecord)\n            .subscribe(rec => {\n                let errMsg : string = StateService.resultErrorMsg(rec);\n                if (errMsg) {\n                    this.showErrDialog(\"ERROR : \" + errMsg);\n                    this.selectAccountRecord(this.selectedAccountRecord); // Select again to make sure the edit form is updated\n                } else {\n                    this.monthlyExpensesReports = null;\n\n                    this.selectedAccountRecord.id = rec.id;\n\n                    // Reload the account summary since:\n                    //    1) applying delta involves having a lot of code to maintain\n                    //    2) the load on the server is not that high when fetching the summary\n                    this.loadSelectedAccountSummary();\n\n                    // Clear the selected account record\n                    this.clearSelectedAccountRecord();\n                }\n            });\n    }\n\n    public newAccountRecord() {\n        this.clearSelectedAccountRecord();\n        let rec : AccountRecord = this.createNewAccountRecord();\n        this.selectedAccountRecords.push(rec);\n        this.selectAccountRecord(rec);\n    }\n\n    public deleteAccountRecord(rec : AccountRecord) {\n        this.clearSelectedAccountRecord();\n\n        this.dialogService.dialogYesNoResponseObservable.subscribe(rsp => {\n            if (rsp) {\n                this.dataService.delete<AccountRecord>(\"records\", rec).subscribe(result => {\n                    if (StateService.resultOk(result)) {\n                        this.popAccountRecord(rec);\n                    } else {\n                        let errResult : ErrorResult = <ErrorResult><unknown>result;\n                        this.showErrDialog(\"ERROR: \" + errResult.message);\n                    }\n                });\n            }\n        });\n\n        this.showYesNoDialog(\"Really delete account record ?\");\n    }\n\n    public saveIncomeOrExpenseItem(item : IncomeOrExpenseItem) : Observable<IncomeOrExpenseItem> {\n        let obs = this.dataService.save<IncomeOrExpenseItem>(\"items\", item);\n        \n        obs.subscribe(\n            ret => {\n                this.incomeOrExpenseItems = null;\n                this.loadIncomeOrExpenseItems();\n            }\n        );\n\n        return obs;\n    }\n\n    public moneyTransfer(fromAccountId : Number, toAccountId : Number, amount : Number) {\n        let params = new ParamsBuilder()\n                            .withNumberParam(\"fromAccountId\", fromAccountId)\n                            .withNumberParam(\"toAccountId\", toAccountId)\n                            .withNumberParam(\"amount\", amount)\n                        .build();\n\n        this.dataService.get<String>(\"accounts/transfer\", params).subscribe(\n            ret => {\n                let err : ErrorResult = <ErrorResult><unknown>ret;\n\n                let errMsg : string = StateService.resultErrorMsg(err);\n\n                if (errMsg) {\n                    this.showErrDialog(\"ERROR: \" + errMsg);\n                } else {\n                    this.incomeOrExpenseItems = null;\n                    this.incomeOrExpenseItemCategories = null;\n                    this.loadIncomeOrExpenseItemCategories();\n                    this.loadIncomeOrExpenseItems();\n\n                    if (this.selectedAccount) {\n                        if (this.selectedAccount.id == fromAccountId || this.selectedAccount.id == toAccountId) {\n                            this.selectAccountId(this.selectedAccount.id);\n                        }\n                    }\n                }\n            }\n        );\n    }\n\n    private static resultOk(result: any) : boolean {\n        return result && (<OkResult><unknown>result).text == \"OK\";\n    }\n\n    private static resultErrorMsg(result: any) : string {\n        let err : ErrorResult = <ErrorResult><unknown>result;\n\n        if (err && err.message) {\n            return err.message;\n        } else {\n            return null;\n        }\n    }\n\n    private showErrDialog(errStr : string) {\n        this.dialogService.dialogMessage = errStr;\n        this.dialogService.errDialogRef = this.dialog.open(DialogErrorComponent, {\n            height: '150px',\n            width: '300px'\n          });\n    }\n\n    private showYesNoDialog(msgStr : string) {\n        this.dialogService.dialogMessage = msgStr;\n        this.dialogService.yesNoDialogRef = this.dialog.open(DialogYesNoComponent, {\n            height: '150px',\n            width: '300px'\n          });\n    }\n\n    private popAccountRecord(rec : AccountRecord) {\n        for(let r = 0 ; r < this.selectedAccountRecords.length ; r++) {\n            if (this.selectedAccountRecords[r].id == rec.id) {\n                for(let rr = r ; rr < this.selectedAccountRecords.length ; rr++) {\n                    this.selectedAccountRecords[rr] = this.selectedAccountRecords[rr+1];\n                }\n                this.selectedAccountRecords.pop();\n                break;\n            }\n        }\n    }\n\n    private createNewAccountRecord() : AccountRecord {\n        let rec : AccountRecord = new AccountRecord(null);\n        rec.accountId = this.selectedAccount.id;\n        rec.date = new Date();\n        rec.incomeOrExpenseItemId = 0;\n        rec.value = 0;\n        return rec;\n    }\n\n    private clearSelectedAccountRecord() {\n        this.selectedAccountRecord = null;\n        this.monthlyBalanceReport = [];\n    }\n\n    public loadSummaryOfAllAccounts() {\n        if (this.accounts.length > 0) {\n            this.loadSummaryOfAllAccountsPresumingAccountsHaveBeenLoaded();\n        } else {\n            this.loadAccounts().subscribe(result => {\n                this.loadSummaryOfAllAccountsPresumingAccountsHaveBeenLoaded();\n            });\n        }\n    }\n\n    private loadSummaryOfAllAccountsPresumingAccountsHaveBeenLoaded() {\n        this.accountSummaries = [];\n        this.accountSummariesLoaded = false;\n\n        for(let acc of this.accounts) {\n            this.loadAccountSummary(acc.id).subscribe(acSum => {\n                this.accountSummaries[acc.id.valueOf()] = acSum;\n                this.updateAccountSummariesStatus();\n            })\n        }\n    }\n\n    private updateAccountSummariesStatus() {\n        this.accountSummariesLoaded = false;\n\n        for (let acc of this.accounts) {\n            if (!(this.accountSummaries[acc.id.valueOf()])) {\n                return;\n            }\n        }\n\n        this.accountSummariesLoaded = true;\n    }\n\n    private loadSelectedAccountSummary() : Observable<AccountSummary> {\n        let ret = this.loadAccountSummary(this.selectedAccount.id);\n\n        ret.subscribe(accountSummary => {\n            this.selectedAccountSummary = accountSummary;\n        });\n\n        return ret;\n    }\n\n    private loadAccountSummary(accountId : Number) : Observable<AccountSummary> {\n        return this.dataService.get<AccountSummary>(\"accounts/summary\", StateService.makeIdParam(\"accountId\", accountId));\n    }\n\n    private loadSelectedAccountRecords() {\n        this.dataService.get<AccountRecord[]>(\"records/list\", StateService.makeIdParam(\"accountId\", this.selectedAccount.id))\n          .subscribe(ret => {\n              this.selectedAccountRecords = ret;\n          });\n    }\n\n    public loadIncomeOrExpenseItems() {\n        if (this.incomeOrExpenseItems == null || this.incomeOrExpenseItems == undefined) {\n            this.loadList<IncomeOrExpenseItem>(\"items\", (result => {\n                this.incomeOrExpenseItems = this.sortIncomeOrExpenseItems(result);\n                \n            }));\n        }\n    }\n\n    public getIncomeOrExpenseItem(itemId : Number) : IncomeOrExpenseItem {\n        for (let item of this.incomeOrExpenseItems) {\n            if (item.id == itemId) {\n                return item;\n            }\n        }\n\n        return null;\n    }\n\n    private sortIncomeOrExpenseItems(items : IncomeOrExpenseItem[]) : IncomeOrExpenseItem[] {\n        return items.sort( (a, b) => { \n            if (a.incomeOrExpenseItemCategoryId == b.incomeOrExpenseItemCategoryId) {\n                return (a.name < b.name ? -1 : 1);\n            } else {\n                if (a.incomeOrExpenseItemCategoryId) {\n                    return a.incomeOrExpenseItemCategoryId.valueOf() - b.incomeOrExpenseItemCategoryId.valueOf();\n                } else {\n                    return -1;\n                }\n            }\n         } )\n    }\n\n    public loadIncomeOrExpenseItemCategories() {\n        if (this.incomeOrExpenseItemCategories == null || this.incomeOrExpenseItemCategories == undefined) {\n            this.loadList<IncomeOrExpenseItemCategory>(\n                \"categories\",\n                result => {\n                    this.incomeOrExpenseItemCategories = result;\n                    this.selectedIncomeOrExpenseItemCategory = this.incomeOrExpenseItemCategories[0];\n                }\n            );\n        }\n    }\n\n    public saveIncomeOrExpenseItemCategory(category : IncomeOrExpenseItemCategory) : Observable<IncomeOrExpenseItemCategory> {\n        let obs = this.dataService.save<IncomeOrExpenseItemCategory>(\"categories\", category);\n        \n        obs.subscribe(\n            cat => {\n                category.id = cat.id;\n                this.integrateIdentifiable<IncomeOrExpenseItemCategory>(cat, this.incomeOrExpenseItemCategories);\n            }\n        );\n\n        return obs;\n    }\n\n    private integrateIdentifiable<T extends Identifiable>(item : T, array : T[]) {\n        for(let c = 0 ; c < array.length ; c++) {\n            if (array[c].id == item.id) {\n                array[c] = item;\n                return;\n            }\n        }\n\n        array.push(item);\n    }\n\n    private loadList<T extends Nameable>(wsPath: string, callback:Function) {\n        this.dataService.list<T[]>(wsPath).subscribe(items => {\n            let newList : T[] = [];\n\n            for(let item of items) {\n                newList[item.id.valueOf()] = item;\n            }\n\n            newList[0] = <T>(new Nameable(0, \"Not selected\"));\n\n            callback(newList);\n      });\n    }\n\n    private static makeIdParam(paramName : string, paramValue : Number) : Map<string,string> {\n        return new Map([[paramName, paramValue.toFixed()]]);\n    }\n}\n","export class GoogleChartsStyle {\r\n    public static createOptions() {\r\n        let ret = {\r\n            hAxis: {\r\n                textStyle:{color: '#999', fontSize: 9},\r\n                slantedText:true,\r\n                slantedTextAngle:90\r\n            },\r\n            vAxis:{\r\n                textStyle:{color: '#999', fontSize: 9},\r\n                titleTextStyle : {color : \"#999\"},\r\n                viewWindowMode:'explicit',\r\n                viewWindow: {\r\n                    max:3000,\r\n                    min:500\r\n                }\r\n            },\r\n\r\n            colors: ['#574', '#754', '#884'],\r\n            backgroundColor: \"#282828\",\r\n\r\n            legend: {position: 'top', textStyle: {color: '#AAA'}},\r\n\r\n            tooltip: { isHtml: true }\r\n        };\r\n\r\n        return ret;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  skin : \"dark-times\" // Name of the skin\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}